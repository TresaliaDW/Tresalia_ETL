<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/18/2016 4:54:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DELPMAITR46622"
  DTS:CreatorName="SAPIENT\pmaitr"
  DTS:DTSID="{5773806B-9C9B-4D9D-B4AB-92CA926F7295}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_Tresalia_Excel_Stg_Country"
  DTS:PackageType="5"
  DTS:VersionBuild="203"
  DTS:VersionGUID="{FF09DF6E-9D19-420A-8E00-D3B34B66CB2B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConnectionManager_Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
      DTS:ObjectName="ConnectionManager_Stage">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{D13C0E72-B6BB-4AAB-AB28-7555E1CA8DE5}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::SourceFolderPath] +  @[User::SourceFileName_Country]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Tresalia\Anupam\Tresalia_ETL\Source\20160309 - Country Mapping.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="D:\Tresalia\Anupam\Tresalia_ETL\Config\Tresalia_ConnectionStrings.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{A53C9112-D018-46FF-BFD9-503D308F90EE}"
      DTS:ObjectName="Configuration 1" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7080AB0F-C2E8-4D2B-AEB8-E61253CC43A2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{53DF27C2-562F-4D81-B034-AE1046AA10AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51600C16-3A53-4378-B323-C1A067CA7176}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionMgr_Country">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B86A010D-4D81-4709-A83A-6E5BAC504281}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Error\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{674D6619-E67C-4BE1-BDC7-CFBCDA0E157F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMask_Country">
      <DTS:VariableValue
        DTS:DataType="8">*- Country Mapping.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B3A3844-C124-4EA9-BA03-5910AFDDE4EB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolderPath_Country">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Input\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66500BB0-E68F-4BBA-AAB1-1A3D8950AE89}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DAD5C291-F3DE-46B0-B838-0973FD6E0AA0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedRecordsInFile">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2952603-C0DB-41B1-93A3-3010FECBEE84}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStatus">
      <DTS:VariableValue
        DTS:DataType="8">SUCCESS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B240B691-7CA2-4DD3-94F4-540324AC586D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Select * from [&quot; + @[User::TabName_Country]     +  @[User::SelectedColumnRange_Country]     + &quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Query_Country">
      <DTS:VariableValue
        DTS:DataType="8">Select * from [Master$A:P]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73B5403C-4191-4714-B8EF-AECCF04C0CFE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SelectedColumnRange_Country">
      <DTS:VariableValue
        DTS:DataType="8">A:P</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6E5D586-9616-4D3F-9DCA-7C2D7E3BFE61}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SheetList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A345E613-13C4-40B7-A29D-87F99EEB953B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileDateTime">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74A3581B-E55B-415C-B5E7-0111823DE274}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{680491BF-2CF1-4CC4-A633-93365E8C43F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileName_Country">
      <DTS:VariableValue
        DTS:DataType="8">20160309 - Country Mapping.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E3A3A0C8-92BC-4BFE-9C76-406BC414EAB6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED1AE184-D058-4733-83E0-32F3FF6BB7C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="StartDate">
      <DTS:VariableValue
        DTS:DataType="7">3/24/2016 7:00:32 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6712CC22-443B-49AA-9825-C74092DC415D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TabName_Country">
      <DTS:VariableValue
        DTS:DataType="8">Master$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F8EE0A6-3148-4AD7-ABDC-2DA59818362E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalRecordsInFile">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create TresaliaJobLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2c249a1b-f57d-4a54-8e30-570a7ecaf873}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create TresaliaJobLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
          SQLTask:SqlStatementSource="EXEC stg.spCreateJobExecutionHistory 'S', 'LoadDataWarehouse_Country',? OUTPUT, ? OUTPUT, ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JobId"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="20"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::BatchDate"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="20" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::StartDate"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="135"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create TresaliaPackageLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{f882fff1-b02e-4841-bb36-51470e95be76}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create TresaliaPackageLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
          SQLTask:SqlStatementSource="EXEC stg.spCreatePackageExecutionHistory 'S',?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@JobID"
            SQLTask:DtsVariableName="User::JobId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="20"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@BatchDate"
            SQLTask:DtsVariableName="User::BatchDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="20" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{22B858B6-6D0B-49FA-9DA2-2F33987F3028}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{17241180-FF78-47BC-8EE5-A0406B61B0DB}"
        DTS:ObjectName="{17241180-FF78-47BC-8EE5-A0406B61B0DB}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::SourceFileList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{E9554E88-328C-4D1C-96A0-B2FC06C2B777}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_675cc4b381374c8797448df361d265ff"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchiveFolderPath,User::SourceFileName_Country,User::SourceFolderPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_675cc4b381374c8797448df361d265ff.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fa7f995c-97b2-4739-8769-a662ecf165e4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_675cc4b381374c8797448df361d265ff</RootNamespace>
    <AssemblyName>ST_675cc4b381374c8797448df361d265ff</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion


namespace ST_675cc4b381374c8797448df361d265ff
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string fileName = Dts.Variables["User::SourceFileName_Country"].Value.ToString();
            string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            string archiveFolderPath = Dts.Variables["User::ArchiveFolderPath"].Value.ToString();
            this.ArchiveProcessedFile(fileName, sourceFolderPath, archiveFolderPath);

            Dts.TaskResult = (int)ScriptResults.Success;
        }


        public void ArchiveProcessedFile(string fileName, string sourceFolderPath, string archiveFolderPath)
        {
            string filePath = sourceFolderPath + "\\" + fileName;
            FileInfo fileInfo = new FileInfo(filePath);

            if (fileInfo.Exists)
            {
                string archivedFileFullName = archiveFolderPath + "\\" + Path.GetFileNameWithoutExtension(fileInfo.FullName) + fileInfo.Extension;
                FileInfo archiveFileInfo = new FileInfo(archivedFileFullName);

                if (archiveFileInfo.Exists)
                {
                    //If File already exist in Archive then overwrite the file in archive and delete from Source
                    File.Copy(fileInfo.FullName, archivedFileFullName, true);
                    File.Delete(fileInfo.FullName);
                }
                else
                {
                    //If File Doesn't exist in Archive then move the file in archive from Source
                    File.Move(fileInfo.FullName, archivedFileFullName);
                }

            }
        }





        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_675cc4b381374c8797448df361d265ff</msb:CodeName>
		<msb:DisplayName>ST_675cc4b381374c8797448df361d265ff</msb:DisplayName>
		<msb:ProjectId>{73D09ACD-B65C-4E80-9AEE-16AD4C439CD7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_675cc4b381374c8797448df361d265ff.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_675cc4b381374c8797448df361d265ff.Properties.Settings.get_Default():ST_675cc4b381374c8797448df361d265ff.Properties.Sett" +
    "ings")]

namespace ST_675cc4b381374c8797448df361d265ff.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_675cc4b381374c8797448df361d265ff")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_675cc4b381374c8797448df361d265ff")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_675cc4b381374c8797448df361d265ff.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_675cc4b381374c8797448df361d265ff.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_675cc4b381374c8797448df361d265ff.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_675cc4b381374c8797448df361d265ff.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_675cc4b381374c8797448df361d265ff.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_675cc4b381374c8797448df361d265ff.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKDl/FYAAAAAAAAAAOAAAiELAQsAABIAAAAGAAAAAAAArjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGAwAABLAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
MAAAAAAAAEgAAAACAAUAgCIAAOANAAABAAAAAAAAAMghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBAB2AAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyrQAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnLbAABwbxgAAApv
GQAACm8aAAAKDAIGBwgoCQAABgIoFgAAChZvGwAACioAABMwBABuAAAAAwAAEQRyCwEAcAMoHAAA
CgoGcx0AAAoLB28eAAAKLFEFcgsBAHAHbx8AAAooIAAACgdvIQAACigiAAAKDAhzHQAACg0Jbx4A
AAosGQdvHwAACggXKCMAAAoHbx8AAAooJAAACioHbx8AAAoIKCUAAAoqHgIoJgAACioAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAPAQAACN+AACo
BAAAfAYAACNTdHJpbmdzAAAAACQLAAAQAQAAI1VTADQMAAAQAAAAI0dVSUQAAABEDAAAnAEAACNC
bG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACIAAAAFAAAABgAAAAoAAAAEAAAAJgAA
AAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoA
CgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCYAn4CBgDDArECBgDaArECBgD3ArECBgAW
A7ECBgAvA7ECBgBIA7ECBgBjA7ECBgB+A7ECBgCXA7ECBgDQA7ADBgDwA7ADBgAhBA4EBgA+BLoA
BgBDBLoABgBnBLECCgCTBH0ECgCsBH0EBgDBBLADDgDjBBQBDgAFBRQBEgBeBT4FEgB2BT4FBgCq
BboABgDCBbgFBgDLBbgFBgDyBbgFBgAhBrgFAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAAB
EABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAALABEAfwETABEArAEXABEA9gE5
AAYGNAJOAFaAPAJRAFaARAJRAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYB
JAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY3ASQ
AAIAvCAAAAAAhgAaAhsAAgBAIQAAAACGAB8CRwACALohAAAAAIYYvAEbAAUAAAABAEwCAAABAFIC
AAACAFsCAAADAGwCOQC8AV8AQQC8AV8ASQC8AV8AUQC8AV8AWQC8AV8AYQC8AV8AaQC8AV8AcQC8
AV8AeQC8AV8AgQC8AV8AiQC8AWQAkQC8ARsAmQC8ARsACQC8ARsAoQBVBGkAoQBwBHAAKQC8AXUA
uQC8AYEAyQC8ARsAEQC8ARsA0QC8ARsAGQAXBZQA2QBoBZkA4QB/BZ4A6QCIBaQACQCSBagA2QCb
BWQA8QCxBbIA+QC8AV8AAQHaBbkAAQHlBagACQH3Bb0AAQETBqgA8QCxBcIAEQEmBsoAEQErBtEA
EQEyBtYAGQC8ARsACAAUAFUACAAYAFoAKQCTAIcALgAbAFYBLgAjAFYBLgBjAHwBLgALAOUALgAT
AC0BLgAzAC0BLgArAFYBLgA7AFwBLgBDAFYBLgBbAHMBQwBrAFoASQCTAIcAYQCbAFoAgwCrAFoA
fACsANwAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAE
gAAAAQAAAC4XUAYAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoA
AAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgAfBQAAAAAAAAAAAQAAADcGAAAF
AAQAAAAAAAA8TW9kdWxlPgBTVF82NzVjYzRiMzgxMzc0Yzg3OTc0NDhkZjM2MWQyNjVmZi5kbGwA
UmVzb3VyY2VzAFNUXzY3NWNjNGIzODEzNzRjODc5NzQ0OGRmMzYxZDI2NWZmLlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF82NzVjYzRiMzgxMzc0Yzg3OTc0NDhkZjM2MWQyNjVmZgBT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAEFyY2hpdmVQcm9jZXNzZWRGaWxl
AHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGZpbGVOYW1lAHNvdXJjZUZvbGRlclBhdGgA
YXJjaGl2ZUZvbGRlclBhdGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3Vs
dHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1i
bHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNj
dG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABn
ZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdl
dF9WYWx1ZQBUb1N0cmluZwBzZXRfVGFza1Jlc3VsdABTdHJpbmcAQ29uY2F0AFN5c3RlbS5JTwBG
aWxlSW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfRXhpc3RzAGdldF9GdWxsTmFtZQBQYXRoAEdldEZp
bGVOYW1lV2l0aG91dEV4dGVuc2lvbgBnZXRfRXh0ZW5zaW9uAEZpbGUAQ29weQBEZWxldGUATW92
ZQBTVF82NzVjYzRiMzgxMzc0Yzg3OTc0NDhkZjM2MWQyNjVmZi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAAAAcVMAVABfADYANwA1AGMAYwA0AGIAMwA4ADEAMwA3ADQAYwA4ADcAOQA3
ADQANAA4AGQAZgAzADYAMQBkADIANgA1AGYAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAOVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAaQBsAGUATgBhAG0AZQBf
AEMAbwB1AG4AdAByAHkAAC1VAHMAZQByADoAOgBTAG8AdQByAGMAZQBGAG8AbABkAGUAcgBQAGEA
dABoAAAvVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBGAG8AbABkAGUAcgBQAGEAdABoAAADXAAA
AM3iwLc1UHJCkszUoo6BZ/AACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAAS
GQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAYgAwEODg4CBggDBhEUBAAAAAAEAQAAAAQg
AQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0E
IAAScQUgARJ1HAMgABwDIAAOBQcDDg4OBgADDg4ODgMgAAIEAAEODgcABA4ODg4OBgADAQ4OAgQA
AQEOBQACAQ4OCAcEDhJ9DhJ9RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzY3NWNjNGIzODEzNzRjODc5
NzQ0OGRmMzYxZDI2NWZmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAiDAAAAAAAAAAAAAAnjAAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAJAwAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAFAGLhcAAAEAUAYuFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA2ADcANQBjAGMANABiADMAOAAxADMANwA0AGMAOAA3ADkANwA0ADQAOABkAGYAMwA2ADEAZAAy
ADYANQBmAGYAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADMA
NAAuADEANgAxADYAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADYANwA1
AGMAYwA0AGIAMwA4ADEAMwA3ADQAYwA4ADcAOQA3ADQANAA4AGQAZgAzADYAMQBkADIANgA1AGYA
ZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADYANwA1AGMAYwA0AGIAMwA4ADEAMwA3ADQAYwA4ADcAOQA3ADQANAA4
AGQAZgAzADYAMQBkADIANgA1AGYAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA2ADcANQBjAGMANABiADMAOAAxADMANwA0AGMAOAA3ADkANwA0ADQAOABk
AGYAMwA2ADEAZAAyADYANQBmAGYAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQAzADQALgAxADYAMQA2AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADMANAAuADEANgAxADYAAAAAAAAAADAAAAwAAACwMAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create FileHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5BAF6491-8947-4C94-98F0-95E4A5668311}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FileHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
              SQLTask:SqlStatementSource="exec stg.spCreateFileHistory ?,?,?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFileName"
                SQLTask:DtsVariableName="User::SourceFileName_Country"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_Country"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TotalRecordsInFile"
                SQLTask:DtsVariableName="User::TotalRecordsInFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@JobID"
                SQLTask:DtsVariableName="User::JobId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@BatchDate"
                SQLTask:DtsVariableName="User::BatchDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{853E92AB-CF6C-43C6-AD67-D3BBE5E3DB85}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Loading Excel Sheet Data To Table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{AB6C9CD3-CFCC-4E41-B94C-3CC185792877}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{08D92452-EF53-431D-AB9B-B892765F5BC4}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileName"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Filepath]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Filepath"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[TabName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="TabName"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[BatchDate]"
                          cachedDataType="date"
                          cachedName="BatchDate"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Country ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Country "
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[MSCI_COUNTRY_NAME]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MSCI_COUNTRY_NAME"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_COUNTRY_NAME]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[MSCI_INDEX_ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MSCI_INDEX_ID"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_INDEX_ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[FDS_COUNTRY_NAME]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FDS_COUNTRY_NAME"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[FDS_COUNTRY_NAME]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[ISO (#)]"
                          cachedDataType="r8"
                          cachedName="ISO (#)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (#)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[ISO (2)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ISO (2)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (2)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[ISO (3)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ISO (3)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (3)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[ISO (FIPS)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ISO (FIPS)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (FIPS)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Base Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Base Date"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Base Date2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Base Date2"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Base Date 3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Base Date 3"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Style]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Style"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Style]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Continent]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Continent"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Continent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Region]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Region"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Currency Code]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Currency Code"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Currency Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Currency Name"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country]"
                          name="DC.Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC. MSCI_COUNTRY_NAME]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC. MSCI_COUNTRY_NAME]"
                          name="DC. MSCI_COUNTRY_NAME"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_COUNTRY_NAME]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MSCI_INDEX_ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MSCI_INDEX_ID]"
                          name="DC.MSCI_INDEX_ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_INDEX_ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FDS_COUNTRY_NAME]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FDS_COUNTRY_NAME]"
                          name="DC.FDS_COUNTRY_NAME"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[FDS_COUNTRY_NAME]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (#)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (#)]"
                          name="DC.ISO (#)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (#)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (2)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (2)]"
                          name="DC.ISO (2)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (2)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (3)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (3)]"
                          name="DC.ISO (3)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (3)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (FIPS)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (FIPS)]"
                          name="DC.ISO (FIPS)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (FIPS)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date]"
                          name="DC.Base Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date2]"
                          name="DC.Base Date2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date 3]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date 3]"
                          name="DC.Base Date 3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date 3]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Style]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Style]"
                          name="DC.Style"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Style]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Continent]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Continent]"
                          name="DC.Continent"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Continent]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]"
                          name="DC.Region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Code]"
                          name="DC.Currency Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Code]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Name]"
                          name="DC.Currency Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FileName]"
                          name="DC.FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Filepath]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Filepath]"
                          name="DC.Filepath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.TabName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.TabName]"
                          name="DC.TabName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.BatchDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.BatchDate]"
                          name="DC.BatchDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFileName_Country]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFileName_Country]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          name="Filepath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          name="TabName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::TabName_Country]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::TabName_Country]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          name="BatchDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::BatchDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::BatchDate]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileDate]"
                          name="FileDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)[TRIM]([SUBSTRING](@[User::SourceFileName_Country],1,[FINDSTRING](@[User::SourceFileName_Country],"-",1) - 1))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)TRIM(SUBSTRING(@[User::SourceFileName_Country],1,FINDSTRING(@[User::SourceFileName_Country],"-",1) - 1))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Master$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::Query_Country</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country ]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country ]"
                          name="Country "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_COUNTRY_NAME]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MSCI_COUNTRY_NAME]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_COUNTRY_NAME]"
                          name="MSCI_COUNTRY_NAME"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_INDEX_ID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MSCI_INDEX_ID]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MSCI_INDEX_ID]"
                          name="MSCI_INDEX_ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[FDS_COUNTRY_NAME]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[FDS_COUNTRY_NAME]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[FDS_COUNTRY_NAME]"
                          name="FDS_COUNTRY_NAME"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (#)]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (#)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (#)]"
                          name="ISO (#)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (2)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (2)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (2)]"
                          name="ISO (2)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (3)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (3)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (3)]"
                          name="ISO (3)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (FIPS)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (FIPS)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISO (FIPS)]"
                          name="ISO (FIPS)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date]"
                          name="Base Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date2]"
                          name="Base Date2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date 3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date 3]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Base Date 3]"
                          name="Base Date 3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Style]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Style]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Style]"
                          name="Style"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Continent]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Continent]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Continent]"
                          name="Continent"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Region]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]"
                          name="Region"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Code]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Currency Code]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Code]"
                          name="Currency Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Currency Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Currency Name]"
                          name="Currency Name"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country ]"
                          dataType="wstr"
                          length="255"
                          name="Country " />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MSCI_COUNTRY_NAME]"
                          dataType="wstr"
                          length="255"
                          name="MSCI_COUNTRY_NAME" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MSCI_INDEX_ID]"
                          dataType="wstr"
                          length="255"
                          name="MSCI_INDEX_ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[FDS_COUNTRY_NAME]"
                          dataType="wstr"
                          length="255"
                          name="FDS_COUNTRY_NAME" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (#)]"
                          dataType="r8"
                          name="ISO (#)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (2)]"
                          dataType="wstr"
                          length="255"
                          name="ISO (2)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (3)]"
                          dataType="wstr"
                          length="255"
                          name="ISO (3)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISO (FIPS)]"
                          dataType="wstr"
                          length="255"
                          name="ISO (FIPS)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date]"
                          dataType="wstr"
                          length="255"
                          name="Base Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date2]"
                          dataType="wstr"
                          length="255"
                          name="Base Date2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Date 3]"
                          dataType="wstr"
                          length="255"
                          name="Base Date 3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Style]"
                          dataType="wstr"
                          length="255"
                          name="Style" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Continent]"
                          dataType="wstr"
                          length="255"
                          name="Continent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Region]"
                          dataType="wstr"
                          length="255"
                          name="Region" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Currency Code]"
                          dataType="wstr"
                          length="255"
                          name="Currency Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Currency Name]"
                          dataType="wstr"
                          length="255"
                          name="Currency Name" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Country ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Country ]"
                          name="Country " />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MSCI_COUNTRY_NAME]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MSCI_COUNTRY_NAME]"
                          name="MSCI_COUNTRY_NAME" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MSCI_INDEX_ID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MSCI_INDEX_ID]"
                          name="MSCI_INDEX_ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[FDS_COUNTRY_NAME]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[FDS_COUNTRY_NAME]"
                          name="FDS_COUNTRY_NAME" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (#)]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (#)]"
                          name="ISO (#)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (2)]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (2)]"
                          name="ISO (2)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (3)]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (3)]"
                          name="ISO (3)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (FIPS)]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISO (FIPS)]"
                          name="ISO (FIPS)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date]"
                          name="Base Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date2]"
                          name="Base Date2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date 3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Base Date 3]"
                          name="Base Date 3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Style]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Style]"
                          name="Style" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Continent]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Continent]"
                          name="Continent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Region]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Region]"
                          name="Region" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Currency Code]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Currency Code]"
                          name="Currency Code" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Currency Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Currency Name]"
                          name="Currency Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[Country]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConnectionManager_Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[ConnectionManager_Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.BatchDate]"
                          cachedDataType="date"
                          cachedName="DC.BatchDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.BatchDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.TabName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.TabName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.TabName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Country"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC. MSCI_COUNTRY_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC. MSCI_COUNTRY_NAME"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MSCI_COUNTRY_NAME]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC. MSCI_COUNTRY_NAME]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.MSCI_INDEX_ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.MSCI_INDEX_ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MSCI_INDEX_ID]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MSCI_INDEX_ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.FDS_COUNTRY_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.FDS_COUNTRY_NAME"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FDS_COUNTRY_NAME]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.FDS_COUNTRY_NAME]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.ISO (#)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.ISO (#)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (#)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (#)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.ISO (2)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.ISO (2)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (2)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (2)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.ISO (3)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.ISO (3)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (3)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (3)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.ISO (FIPS)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.ISO (FIPS)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (FIPS)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISO (FIPS)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Base Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Base Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Base Date2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Base Date2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate2]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Base Date 3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Base Date 3"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate3]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Base Date 3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Style]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Style"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Style]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Style]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Continent]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Continent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Continent]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Continent]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Region"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Currency Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Currency Code"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyCode]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Currency Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Currency Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyName]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Currency Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileDate]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CreatedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          dataType="dbDate"
                          name="BatchDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="TabName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MSCI_COUNTRY_NAME]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MSCI_COUNTRY_NAME" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MSCI_INDEX_ID]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MSCI_INDEX_ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FDS_COUNTRY_NAME]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FDS_COUNTRY_NAME" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (#)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ISO (#)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (2)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ISO (2)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (3)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ISO (3)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISO (FIPS)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ISO (FIPS)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="BaseDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate2]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="BaseDate2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BaseDate3]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="BaseDate3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Style]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Style" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Continent]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Continent" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Region" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyCode]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CurrencyCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CurrencyName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileDate]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::TotalRecordsInFile</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Logging Error"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{bb804017-6821-4189-8ff9-c120eecb4d22}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logging Error"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_247437e96eef43b5b7dd8632eb612e75"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ErrorFolderPath,User::SourceFileName_Country,User::SourceFolderPath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01d166759841427f9d9296ecd9e73f44.Properties.Settings.get_Default():ST_01d166759841427f9d9296ecd9e73f44.Properties.Sett" +
    "ings")]

namespace ST_01d166759841427f9d9296ecd9e73f44.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_01d166759841427f9d9296ecd9e73f44
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here

            string fileName = Dts.Variables["User::SourceFileName_Country"].Value.ToString();
            string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            string errorFolderPath = Dts.Variables["User::ErrorFolderPath"].Value.ToString();
            this.MoveErrorFile(fileName, sourceFolderPath, errorFolderPath);


            /*
            string lines = Environment.NewLine + "--------------------------------------------" + Environment.NewLine + "Error Code = " + Dts.Variables["System::ErrorCode"].Value.ToString() + Environment.NewLine + "Error Description = " + Dts.Variables["System::ErrorDescription"].ToString() + Environment.NewLine + "Date = " + DateTime.Now.ToString() + Environment.NewLine + "--------------------------------------------";
            string filepath = @"D:\Tersalia\Error\LogError.txt";
            File.AppendAllText(filepath, lines, System.Text.Encoding.ASCII);
            */

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        public void MoveErrorFile(string fileName, string sourceFolderPath, string errorFolderPath)
        {
            string filePath = sourceFolderPath + "\\" + fileName;
            FileInfo fileInfo = new FileInfo(filePath);

            if (fileInfo.Exists)
            {
                string erroredFileFullName = errorFolderPath + "\\" + Path.GetFileNameWithoutExtension(fileInfo.FullName) + fileInfo.Extension;
                FileInfo errorFileInfo = new FileInfo(erroredFileFullName);

                if (errorFileInfo.Exists)
                {
                    //If File already exist in Error folder then overwrite the file in Error and delete from Source
                    File.Copy(fileInfo.FullName, erroredFileFullName, true);
                    File.Delete(fileInfo.FullName);
                }
                else
                {
                    //If File Doesn't exist in Error folder then move the file in error folder from Source
                    File.Move(fileInfo.FullName, erroredFileFullName);
                }

            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_247437e96eef43b5b7dd8632eb612e75.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{70056CAE-99F0-4EBB-AB97-3011BE70A2FE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_01d166759841427f9d9296ecd9e73f44</RootNamespace>
    <AssemblyName>ST_247437e96eef43b5b7dd8632eb612e75</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_01d166759841427f9d9296ecd9e73f44</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_01d166759841427f9d9296ecd9e73f44</msb:DisplayName>
		<msb:ProjectId>{5C3686EA-45B9-4565-B7A3-505865B8078F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_247437e96eef43b5b7dd8632eb612e75.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_01d166759841427f9d9296ecd9e73f44")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_01d166759841427f9d9296ecd9e73f44")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01d166759841427f9d9296ecd9e73f44.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01d166759841427f9d9296ecd9e73f44.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01d166759841427f9d9296ecd9e73f44.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_01d166759841427f9d9296ecd9e73f44.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_01d166759841427f9d9296ecd9e73f44.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_247437e96eef43b5b7dd8632eb612e75.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPeQC1cAAAAAAAAAAOAAAiELAQsAABIAAAAGAAAAAAAAzjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHgwAABTAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
MAAAAAAAAEgAAAACAAUAgCIAAPgNAAABAAAAAAAAAMghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBAB2AAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApyrQAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnLbAABwbxgAAApv
GQAACm8aAAAKDAIGBwgoCQAABgIoFgAAChZvGwAACioAABMwBABuAAAAAwAAEQRyBwEAcAMoHAAA
CgoGcx0AAAoLB28eAAAKLFEFcgcBAHAHbx8AAAooIAAACgdvIQAACigiAAAKDAhzHQAACg0Jbx4A
AAosGQdvHwAACggXKCMAAAoHbx8AAAooJAAACioHbx8AAAoIKCUAAAoqHgIoJgAACioAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAPAQAACN+AACo
BAAAmAYAACNTdHJpbmdzAAAAAEALAAAMAQAAI1VTAEwMAAAQAAAAI0dVSUQAAABcDAAAnAEAACNC
bG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACIAAAAFAAAABgAAAAoAAAAEAAAAJgAA
AAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoA
CgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCPAnUCBgC6AqgCBgDRAqgCBgDuAqgCBgAN
A6gCBgAmA6gCBgA/A6gCBgBaA6gCBgB1A6gCBgCOA6gCBgDHA6cDBgDnA6cDBgA8BCkEBgBZBLoA
BgBeBLoABgCCBKgCCgCuBJgECgDHBJgEBgDcBKcDDgD+BBQBDgAgBRQBEgB5BVkFEgCRBVkFBgDF
BboABgDdBdMFBgDmBdMFBgANBtMFBgA8BtMFAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAAB
EABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAALABEAfwETABEArAEXABEA9gE5
AAYGLQJOAFaANQJRAFaAPQJRAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYB
JAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY9wSQ
AAIAvCAAAAAAhgAaAhsAAgBAIQAAAACGAB8CRwACALohAAAAAIYYvAEbAAUAAAABAEUCAAABAEsC
AAACAFQCAAADAGUCOQC8AV8AQQC8AV8ASQC8AV8AUQC8AV8AWQC8AV8AYQC8AV8AaQC8AV8AcQC8
AV8AeQC8AV8AgQC8AV8AiQC8AWQAkQC8ARsAmQC8ARsACQC8ARsAoQBwBGkAoQCLBHAAKQC8AXUA
uQC8AYEAyQC8ARsAEQC8ARsA0QC8ARsAGQAyBZQA2QCDBZkA4QCaBZ4A6QCjBaQACQCtBagA2QC2
BWQA8QDMBbIA+QC8AV8AAQH1BbkAAQEABqgACQESBr0AAQEuBqgA8QDMBcIAEQFBBsoAEQFGBtEA
EQFNBtYAGQC8ARsACAAUAFUACAAYAFoAKQCTAIcALgAbAFYBLgAjAFYBLgBjAHwBLgALAOUALgAT
AC0BLgAzAC0BLgArAFYBLgA7AFwBLgBDAFYBLgBbAHMBQwBrAFoASQCTAIcAYQCbAFoAgwCrAFoA
fACsANwAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAE
gAAAAQAAADkXuxsAAAAAAAAFBAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoA
AAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgA6BQAAAAAAAAAAAQAAAFIGAAAF
AAQAAAAAAAA8TW9kdWxlPgBTVF8yNDc0MzdlOTZlZWY0M2I1YjdkZDg2MzJlYjYxMmU3NS5kbGwA
UmVzb3VyY2VzAFNUXzAxZDE2Njc1OTg0MTQyN2Y5ZDkyOTZlY2Q5ZTczZjQ0LlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8wMWQxNjY3NTk4NDE0MjdmOWQ5Mjk2ZWNkOWU3M2Y0NABT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAE1vdmVFcnJvckZpbGUAdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAZmlsZU5hbWUAc291cmNlRm9sZGVyUGF0aABlcnJvckZv
bGRlclBhdGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJp
YnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFNUXzI0NzQzN2U5NmVlZjQzYjViN2RkODYzMmViNjEyZTc1AFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFy
aWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBzZXRfVGFza1Jlc3Vs
dABTdHJpbmcAQ29uY2F0AFN5c3RlbS5JTwBGaWxlSW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfRXhp
c3RzAGdldF9GdWxsTmFtZQBQYXRoAEdldEZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBnZXRfRXh0
ZW5zaW9uAEZpbGUAQ29weQBEZWxldGUATW92ZQBTVF8wMWQxNjY3NTk4NDE0MjdmOWQ5Mjk2ZWNk
OWU3M2Y0NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwAwADEAZAAx
ADYANgA3ADUAOQA4ADQAMQA0ADIANwBmADkAZAA5ADIAOQA2AGUAYwBkADkAZQA3ADMAZgA0ADQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADlVAHMAZQByADoAOgBT
AG8AdQByAGMAZQBGAGkAbABlAE4AYQBtAGUAXwBDAG8AdQBuAHQAcgB5AAAtVQBzAGUAcgA6ADoA
UwBvAHUAcgBjAGUARgBvAGwAZABlAHIAUABhAHQAaAAAK1UAcwBlAHIAOgA6AEUAcgByAG8AcgBG
AG8AbABkAGUAcgBQAGEAdABoAAADXAAAAMqUyoeouj9AmzZXD2MPJ5cACLd6XFYZNOCJCImEXc2A
gMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAYg
AwEODg4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUF
IAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBQcDDg4OBgADDg4ODgMg
AAIEAAEODgcABA4ODg4OBgADAQ4OAgQAAQEOBQACAQ4OCAcEDhJ9DhJ9RwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NUXzAxZDE2Njc1OTg0MTQyN2Y5ZDkyOTZlY2Q5ZTczZjQ0AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAoDAA
AAAAAAAAAAAAvjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAwAAAAAAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABALsbORcAAAEAuxs5Fz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAwADEAZAAxADYANgA3ADUAOQA4ADQAMQA0ADIANwBmADkAZAA5ADIAOQA2AGUAYwBkADkAZQA3
ADMAZgA0ADQAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADQA
NQAuADcAMAA5ADkAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIANAA3
ADQAMwA3AGUAOQA2AGUAZQBmADQAMwBiADUAYgA3AGQAZAA4ADYAMwAyAGUAYgA2ADEAMgBlADcA
NQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADIANAA3ADQAMwA3AGUAOQA2AGUAZQBmADQAMwBiADUAYgA3AGQAZAA4
ADYAMwAyAGUAYgA2ADEAMgBlADcANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAwADEAZAAxADYANgA3ADUAOQA4ADQAMQA0ADIANwBmADkAZAA5ADIAOQA2
AGUAYwBkADkAZQA3ADMAZgA0ADQAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQA0ADUALgA3ADAAOQA5AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADQANQAuADcAMAA5ADkAAAAAAAAAADAAAAwAAADQMAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update FileHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E3CB77BE-DBAD-430A-A440-B9C98CAC962F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update FileHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
              SQLTask:SqlStatementSource="exec stg.spUpdateFileHistory ?,?,?,?,?,?, 'COUNTRY'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFilePath"
                SQLTask:DtsVariableName="User::ArchiveFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFileName"
                SQLTask:DtsVariableName="User::SourceFileName_Country"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ProcessingStatus"
                SQLTask:DtsVariableName="User::ProcessingStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_Country"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@JobID"
                SQLTask:DtsVariableName="User::JobId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{21100FDE-0D3F-4C04-A729-109480F1A2D0}"
          DTS:From="Package\Foreach Loop Container\Create FileHistory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Loading Excel Sheet Data To Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0917BD9C-3AF1-47D8-9824-DB88A0384A44}"
          DTS:From="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Archive" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{FCF4A61A-2756-43EB-88F5-A0171C669329}"
          DTS:From="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Logging Error"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{8B487A6D-F584-4DA8-A580-1352AF83DA6C}"
          DTS:From="Package\Foreach Loop Container\Archive"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Update FileHistory" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3C12B7BE-8BC7-4100-809F-6A265AA03B62}"
          DTS:ObjectName="{3C12B7BE-8BC7-4100-809F-6A265AA03B62}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SourceFileName_Country" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get List of Files To Be Processed"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{AFA52AE2-377C-405B-B972-E0D92F63E71B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get List of Files To Be Processed"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4b0a13792e884e9fb444e00b3e6560e0"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FileMask_Country,User::InputFolderPath_Country,User::SourceFolderPath,User::StartDate"
          ReadWriteVariables="User::SourceFileList">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4b0a13792e884e9fb444e00b3e6560e0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{85FCC373-F768-43C8-9293-9E975DC90CE9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4b0a13792e884e9fb444e00b3e6560e0</RootNamespace>
    <AssemblyName>ST_4b0a13792e884e9fb444e00b3e6560e0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Settings.get_Default():ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Sett" +
    "ings")]

namespace ST_4b0a13792e884e9fb444e00b3e6560e0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
#endregion

namespace ST_4b0a13792e884e9fb444e00b3e6560e0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        Dictionary<DateTime, string> dicFileList = new Dictionary<DateTime, string>();
        Dictionary<DateTime, string> dicFileListSorted = new Dictionary<DateTime, string>();

        public const string charBetweenFileNameAndFileDate = "-";

		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                string fileName = string.Empty;
                string inputFolderPath = Dts.Variables["User::InputFolderPath_Country"].Value.ToString();
                string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
                string fileMask = Dts.Variables["User::FileMask_Country"].Value.ToString();
                DateTime startDateTime = Convert.ToDateTime(Dts.Variables["User::StartDate"].Value.ToString().Trim());

                this.GetFileList(inputFolderPath, fileMask, startDateTime);
                this.CopyFilesFromInputToSource(inputFolderPath, sourceFolderPath, fileMask);
            
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            
        }

        public void CopyFilesFromInputToSource(string inputFolderPath, string sourceFolderPath, string fileMask)
        {
            DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(inputFolderPath);

            if (ExcelDirectoryInfo.Exists)
            {
                foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                {
                    File.Copy(inputFolderPath + file.Name, sourceFolderPath + file.Name, true);
                }
            }
        }


        public void GetFileList(string path, string fileMask, DateTime startDateTime)
        {
            DateTime datetime = new DateTime(1900, 01, 01);
            int rowsAffected = 0;
            string datePart = string.Empty;
            int lastIndex = 0;
            int year = 0;
            int month = 0;
            int date = 0;
            int hour = 0;
            string filenameContains = string.Empty;
            try
            {
                DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(path);
                dicFileList.Clear();

                if (ExcelDirectoryInfo.Exists)
                {
                    foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                    {
                        filenameContains = fileMask.ToLower();
                        lastIndex = 0;
                        datePart = string.Empty;
                        year = 0;
                        month = 0;
                        date = 0;
                        hour = 0;
                        //if (file.Name.ToLower().Contains(filenameContains))
                        // {
                        //Expected DateTime format yyyymmddhh
                        if (file.Name.Contains(charBetweenFileNameAndFileDate))
                        {
                            lastIndex = file.Name.LastIndexOf(charBetweenFileNameAndFileDate);
                            if (lastIndex > 0)
                            {
                                //datePart = file.Name.Substring(lastIndex + 1, file.Name.Length - lastIndex - 1);
                                datePart = file.Name.Substring(0, lastIndex).Trim(); //sB+ 1, file.Name.Length - lastIndex - 1);
                                year = Convert.ToInt32(datePart.Substring(0, 4).Trim());
                                month = Convert.ToInt32(datePart.Substring(4, 2).Trim());
                                date = Convert.ToInt32(datePart.Substring(6, 2).Trim());

                                if (datePart.Length > 8)
                                {
                                    hour = Convert.ToInt32(datePart.Substring(8, 2).Trim());
                                }

                                datetime = new DateTime(year, month, date, hour, 0, 0);
                            }
                        }
                        //IF DateTime Value in FileName is later then the StartDate stored for 
                        //Last Suceessfully processed file only then pick the file for processing
                        if (datetime > startDateTime)
                        {
                            dicFileList.Add(datetime, file.Name.Trim());
                        }
                        // }
                    }

                    var list = dicFileList.Keys.ToList<DateTime>();
                    list.Sort();

                    Dts.Variables["User::SourceFileList"].Value = dicFileList.Values.ToList<string>();
                    Dts.TaskResult = (int)ScriptResults.Success;

                }

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4b0a13792e884e9fb444e00b3e6560e0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4b0a13792e884e9fb444e00b3e6560e0</msb:DisplayName>
		<msb:ProjectId>{A64493A2-D590-4700-9BD0-B43561780D59}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4b0a13792e884e9fb444e00b3e6560e0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4b0a13792e884e9fb444e00b3e6560e0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4b0a13792e884e9fb444e00b3e6560e0")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4b0a13792e884e9fb444e00b3e6560e0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4b0a13792e884e9fb444e00b3e6560e0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4b0a13792e884e9fb444e00b3e6560e0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANOVC1cAAAAAAAAAAOAAAiELAQsAABgAAAAGAAAAAAAALjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANw1AABPAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NgAAAAAAAEgAAAACAAUAoCQAADwRAAABAAAAAAAAAOgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBADAAAAAAgAAEX4WAAAKJgIoFwAACm8YAAAKcnMAAHBvGQAACm8a
AAAKbxsAAAoKAigXAAAKbxgAAApyrwAAcG8ZAAAKbxoAAApvGwAACgsCKBcAAApvGAAACnLdAABw
bxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKcgsBAHBvGQAACm8aAAAKbxsAAApvHAAACigdAAAK
DQIGCAkoCgAABgIGBwgoCQAABgIoFwAAChZvHgAACt4PJgIoFwAAChdvHgAACt4AKgEQAAAAAAAA
sLAADyIAAAETMAMASAAAAAMAABEDcx8AAAoKBm8gAAAKLDgGBW8hAAAKDBYNKyYICZoLAwdvIgAA
CigjAAAKBAdvIgAACigjAAAKFygkAAAKCRdYDQkIjmky1CobMAYAswEAAAQAABESACBsBwAAFxco
JQAACn4WAAAKCxYMFg0WEwQWEwUWEwZ+FgAACiYDcx8AAAoTBwJ7BQAABG8mAAAKEQdvIAAACjlb
AQAAEQcEbyEAAAoTChYTCzjvAAAAEQoRC5oTCARvJwAACiYWDH4WAAAKCxYNFhMEFhMFFhMGEQhv
IgAACnIrAQBwbygAAAo5kQAAABEIbyIAAApyKwEAcG8pAAAKDAgWMXsRCG8iAAAKFghvKgAACm8c
AAAKCwcWGm8qAAAKbxwAAAooKwAACg0HGhhvKgAACm8cAAAKKCsAAAoTBAccGG8qAAAKbxwAAAoo
KwAAChMFB28sAAAKHjEUBx4YbyoAAApvHAAACigrAAAKEwYJEQQRBREGFhZzLQAACgoGBSguAAAK
LBgCewUAAAQGEQhvIgAACm8cAAAKby8AAAoRCxdYEwsRCxEKjmk/Bv///wJ7BQAABG8wAAAKKAEA
ACsTCREJbzIAAAoCKBcAAApvGAAACnIvAQBwbxkAAAoCewUAAARvMwAACigCAAArbzQAAAoCKBcA
AAoWbx4AAAreDyYCKBcAAAoXbx4AAAreACoAQRwAAAAAAAAnAAAAfAEAAKMBAAAPAAAAIgAAAXYC
czUAAAp9BQAABAJzNQAACn0GAAAEAig2AAAKKgAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAADQFAAAjfgAAoAUAAOAHAAAjU3RyaW5ncwAAAACADQAAXAEA
ACNVUwDcDgAAEAAAACNHVUlEAAAA7A4AAFACAAAjQmxvYgAAAAAAAAACAAABVx2iCQkLAAAA+iUz
ABYAAAEAAAArAAAABQAAAAkAAAALAAAABwAAADYAAAADAAAADwAAAAQAAAACAAAAAwAAAAQAAAAC
AAAAAQAAAAUAAAABAAAAAQAAAAIAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboA
BgBvAV4BBgCgAYsBBgBUAjkCBgBhAroABgApAw8DBgBUA0IDBgBrA0IDBgCIA0IDBgCnA0IDBgDA
A0IDBgDZA0IDBgD0A0IDBgAPBEIDBgAoBEIDBgBhBEEEBgCBBEEEBgCyBJ8EBgDPBLoABgDUBLoA
BgD4BEIDCgAkBQ4FCgA9BQ4FBgBSBUEEDgB0BRQBBgCWBboADgCjBRQBEgD8BdwFEgAUBtwFBgA+
BroABgBgBroABgB0BmoGBgCCBmoGBgCcBmoGBgC+BmoGHwAbBwAAFgBKBz4HBgBVBzkCBgBcBzkC
HwB2BwAAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwAN
AAQACAADAQAAowAAABEABwAMABEAfwETABEArAEXABEA9gE5AFaAGgJHAAEAagJNAAEAdgJNAAYG
tAJlAFaAvAJoAFaAxAJoAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAAB
AJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYbQWnAAIA
vCAAAAAAhgCIAhsAAgCYIQAAAACGAI0CVgACAOwhAAAAAIYAqAJdAAUAyCMAAAAAhhi8ARsACAAA
AAEAzAIAAAEA0gIAAAIA4gIAAAMA8wIAAAEA/AIAAAIA8wIAAAMAAQNJALwBdgBRALwBdgBZALwB
dgBhALwBdgBpALwBdgBxALwBdgB5ALwBdgCBALwBdgCJALwBdgCRALwBdgCZALwBewChALwBGwCp
ALwBGwAJALwBGwCxAOYEgACxAAEFhwApALwBjADJALwBmADZALwBGwARALwBGwDhALwBGwDpAJ0F
RwAZALUFqwDxAAYGsAD5AB0GtQABASYGvAAJADAGwADpADkGwAAJAUYGxADxAFEGewAZAbwBdgAh
AZEG0gAZAaUG1gAhAa4GwADpALcG3gAxAcMG5ABBALwB+QAMAMgGGwDpAM4GwADpANYGCAHpAN8G
DQHpAOsGEgEJAfUGGAHpAP0GHQFBALwBIQFBAAgHKwEMABcHMwEMACkHOwFBAWoHRwEUAHEHGwAM
AIYHZgEBAZEHdgEMALwBGwAZALwBGwAOABAASgAIACAAbAAIACQAcQApAJMAngAuABsACQIuACMA
CQIuAGMALwIuAAsAmAEuABMA4AEuADMA4AEuACsACQIuADsADwIuAEMACQIuAFsAJgJDAGsAcQBJ
AJMAngBhAJsAcQCDAKsAcQCTAMoA6wB7AQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMA
AgADAAUAAQAEAAUAAgAFAAcAAAFeAQSAAAABAAAAORcpHgAAAAAAAH8AAAAEAAAAAAAAAAAAAAAB
ALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAMAAAAAAAAAAAA
AAAKAL0FAAAAAAQAAAAAAAAAAAAAAAEAMgcAAAAAAAAAAAEAAACbBwAABQAEAGMAWQFjAHIBAAAA
AAA8TW9kdWxlPgBTVF80YjBhMTM3OTJlODg0ZTlmYjQ0NGUwMGIzZTY1NjBlMC5kbGwAUmVzb3Vy
Y2VzAFNUXzRiMGExMzc5MmU4ODRlOWZiNDQ0ZTAwYjNlNjU2MGUwLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF80YjBhMTM3OTJlODg0ZTlmYjQ0NGUwMGIzZTY1NjBlMABTY3JpcHRS
ZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lz
dGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABjaGFyQmV0d2VlbkZpbGVOYW1lQW5kRmlsZURhdGUA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyAERhdGVUaW1lAGRpY0ZpbGVM
aXN0AGRpY0ZpbGVMaXN0U29ydGVkAE1haW4AQ29weUZpbGVzRnJvbUlucHV0VG9Tb3VyY2UAR2V0
RmlsZUxpc3QAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAaW5wdXRGb2xkZXJQYXRoAHNv
dXJjZUZvbGRlclBhdGgAZmlsZU1hc2sAcGF0aABzdGFydERhdGVUaW1lAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0
cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU3RyaW5nAEVtcHR5AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFi
bGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFRy
aW0AQ29udmVydABUb0RhdGVUaW1lAHNldF9UYXNrUmVzdWx0AEV4Y2VwdGlvbgBTeXN0ZW0uSU8A
RGlyZWN0b3J5SW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfRXhpc3RzAEZpbGVJbmZvAEdldEZpbGVz
AGdldF9OYW1lAENvbmNhdABGaWxlAENvcHkAQ2xlYXIAVG9Mb3dlcgBDb250YWlucwBMYXN0SW5k
ZXhPZgBTdWJzdHJpbmcAVG9JbnQzMgBnZXRfTGVuZ3RoAG9wX0dyZWF0ZXJUaGFuAEFkZABLZXlD
b2xsZWN0aW9uAGdldF9LZXlzAFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUATGlz
dGAxAElFbnVtZXJhYmxlYDEAVG9MaXN0AFNvcnQAVmFsdWVDb2xsZWN0aW9uAGdldF9WYWx1ZXMA
c2V0X1ZhbHVlAFNUXzRiMGExMzc5MmU4ODRlOWZiNDQ0ZTAwYjNlNjU2MGUwLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8ANABiADAAYQAxADMANwA5ADIAZQA4ADgANABl
ADkAZgBiADQANAA0AGUAMAAwAGIAMwBlADYANQA2ADAAZQAwAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAA7VQBzAGUAcgA6ADoASQBuAHAAdQB0AEYAbwBsAGQAZQBy
AFAAYQB0AGgAXwBDAG8AdQBuAHQAcgB5AAAtVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwA
ZABlAHIAUABhAHQAaAAALVUAcwBlAHIAOgA6AEYAaQBsAGUATQBhAHMAawBfAEMAbwB1AG4AdABy
AHkAAB9VAHMAZQByADoAOgBTAHQAYQByAHQARABhAHQAZQAAAy0AASlVAHMAZQByADoAOgBTAG8A
dQByAGMAZQBGAGkAbABlAEwAaQBzAHQAAAAAAJtRH/zarQVNlMlUeTxaN2gACLd6XFYZNOCJCImE
Xc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAAS
DAIGDgItAAgGFRIdAhEhDgYgAwEODg4HIAMBDg4RIQIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEB
CAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAASeQQgABJ9BiAB
EoCBHAMgABwDIAAOBQABESEOBwcEDg4OESEDIAACByABHRKAlQ4FAAIODg4GAAMBDg4CDQcEEoCN
EoCVHRKAlQgGIAMBCAgIBxUSHQIRIQ4EIAECDgQgAQgOBSACDggIBAABCA4DIAAICSAGAQgICAgI
CAcAAgIRIREhByACARMAEwELIAAVEoCdAhMAEwEREAEBFRKApQEeABUSgKkBHgAECgERIQcVEoCl
AREhCyAAFRKArQITABMBAwoBDgQgAQEcHAcMESEOCAgICAgSgI0SgJUVEoClAREhHRKAlQhHAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQg
RnJhbWV3b3JrIDQoAQAjU1RfNGIwYTEzNzkyZTg4NGU5ZmI0NDRlMDBiM2U2NTYwZTAAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQAABDYAAAAAAAAAAAAAHjYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA2AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABACkeORcAAAEAKR45Fz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA0
AGIAMABhADEAMwA3ADkAMgBlADgAOAA0AGUAOQBmAGIANAA0ADQAZQAwADAAYgAzAGUANgA1ADYA
MABlADAAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADQANQAu
ADcANwAyADEAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQAYgAwAGEA
MQAzADcAOQAyAGUAOAA4ADQAZQA5AGYAYgA0ADQANABlADAAMABiADMAZQA2ADUANgAwAGUAMAAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQAYgAwAGEAMQAzADcAOQAyAGUAOAA4ADQAZQA5AGYAYgA0ADQANABlADAA
MABiADMAZQA2ADUANgAwAGUAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0AGIAMABhADEAMwA3ADkAMgBlADgAOAA0AGUAOQBmAGIANAA0ADQAZQAwADAA
YgAzAGUANgA1ADYAMABlADAAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADUAOQA0ADUALgA3ADcAMgAxAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA5ADQANQAuADcANwAyADEAAAAAAAAAADAAAAwAAAAwNgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update TresaliaPackageLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8e4ccea6-a78a-4720-b63a-d3aed015b5bf}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update TresaliaPackageLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
          SQLTask:SqlStatementSource="EXEC stg.spCreatePackageExecutionHistory 'U',?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@JobID"
            SQLTask:DtsVariableName="User::JobId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@BatchDate"
            SQLTask:DtsVariableName="User::BatchDate"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="20" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9EBE663C-5BDC-47C7-A132-C0F9EA32DBBB}"
      DTS:From="Package\Get List of Files To Be Processed"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7BFCAE68-DAAA-46E3-898D-126DD62186D4}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Update TresaliaPackageLog" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{F9491B51-07E1-4B90-A9C9-79BDCDFFA5BD}"
      DTS:From="Package\Create TresaliaJobLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Create TresaliaPackageLog" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{6B26A6BC-90AD-478E-A117-EAF078F0E48D}"
      DTS:From="Package\Create TresaliaPackageLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Get List of Files To Be Processed" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{0B062C5D-E507-4FF9-9646-45D92FB74E3D}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4D372A20-8492-4F67-85D1-246D7354D9FC}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{41ef8a16-da8e-4348-893d-f22fbf35bcb1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update TresaliaJobLog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
              SQLTask:SqlStatementSource="EXEC stg.spUpdateJobExecutionHistory 'E', 'LoadDataWarehouse_Country',?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::JobId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Update TresaliaPackageLog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3314ee07-ee1a-4590-a31f-569088757cc2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update TresaliaPackageLog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6D683018-A9F8-46E3-ABF7-E9088EC25708}"
              SQLTask:SqlStatementSource="EXEC stg.spCreatePackageExecutionHistory 'E',?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@JobID"
                SQLTask:DtsVariableName="User::JobId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@BatchDate"
                SQLTask:DtsVariableName="User::BatchDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C5D2872D-89C9-4A80-912B-E97B8AF71530}"
          DTS:From="Package.EventHandlers[OnError]\Update TresaliaPackageLog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Update TresaliaJobLog" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Foreach Loop Container\Archive"
          TopLeft="31.5,209.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Foreach Loop Container\Create FileHistory"
          TopLeft="196,5.5" />
        <NodeLayout
          Size="243,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          TopLeft="155.5,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Update FileHistory"
          TopLeft="5.50000000000006,311.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="277,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="237.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.833333333333,60"
              Start="0,0"
              End="-149.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2354865085854" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2354865085854"
                    Point2="0,24.2354865085854"
                    Point3="-4,24.2354865085854" />
                  <mssgle:LineSegment
                    End="-145.833333333333,24.2354865085854" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.833333333333,24.2354865085854"
                    Point2="-149.833333333333,24.2354865085854"
                    Point3="-149.833333333333,28.2354865085854" />
                  <mssgle:LineSegment
                    End="-149.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="88,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Logging Error"
          TopLeft="300.5,231.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="316.166666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.8333333333334,82"
              Start="0,0"
              End="55.8333333333334,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.1218315617335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.1218315617335"
                    Point2="0,33.1218315617335"
                    Point3="4,33.1218315617335" />
                  <mssgle:LineSegment
                    End="51.8333333333334,33.1218315617335" />
                  <mssgle:CubicBezierSegment
                    Point1="51.8333333333334,33.1218315617335"
                    Point2="55.8333333333334,33.1218315617335"
                    Point3="55.8333333333334,37.1218315617335" />
                  <mssgle:LineSegment
                    End="55.8333333333334,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.6753190104167,38.1218315617335,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="665,359"
          Size="665,403"
          Id="Package\Foreach Loop Container"
          TopLeft="5.50000000000011,413.5" />
        <NodeLayout
          Size="232,42"
          Id="Package\Get List of Files To Be Processed"
          TopLeft="215.5,342.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="334.75,384.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="183,42"
          Id="Package\Create TresaliaJobLog"
          TopLeft="278,126.5" />
        <NodeLayout
          Size="205,42"
          Id="Package\Create TresaliaPackageLog"
          TopLeft="267.5,241" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="369.75,168.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.5"
              Start="0,0"
              End="0,65">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="370,283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.5,59.5"
              Start="0,0"
              End="-38.5,52">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.75"
                    Point2="0,29.75"
                    Point3="-4,29.75" />
                  <mssgle:LineSegment
                    End="-34.5,29.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.5,29.75"
                    Point2="-38.5,29.75"
                    Point3="-38.5,33.75" />
                  <mssgle:LineSegment
                    End="-38.5,52" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="208,42"
          Id="Package\Update TresaliaPackageLog"
          TopLeft="175,892" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="338,816.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-59.0000000000001,75.5"
              Start="0,0"
              End="-59.0000000000001,68">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.75"
                    Point2="0,37.75"
                    Point3="-4,37.75" />
                  <mssgle:LineSegment
                    End="-55.0000000000001,37.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-55.0000000000001,37.75"
                    Point2="-59.0000000000001,37.75"
                    Point3="-59.0000000000001,41.75" />
                  <mssgle:LineSegment
                    End="-59.0000000000001,68" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          TopLeft="74.5,145.5" />
        <NodeLayout
          Size="208,42"
          Id="Package.EventHandlers[OnError]\Update TresaliaPackageLog"
          TopLeft="60,60" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="165.75,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.5"
              Start="0,0"
              End="0,36">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Loading Excel Sheet Data To Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination"
          TopLeft="5.50000000000004,413.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count"
          TopLeft="26,107.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source"
          TopLeft="21.5,5.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column"
          TopLeft="14,209.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion"
          TopLeft="13,311.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Data Conversion Output]"
          TopLeft="91,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Row Count Output 1]"
          TopLeft="91,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Excel Source Output]"
          TopLeft="91,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Derived Column Output]"
          TopLeft="91,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>