<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/18/2016 4:54:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DELPMAITR46622"
  DTS:CreatorName="SAPIENT\pmaitr"
  DTS:DTSID="{A69C4AA1-FED4-4C61-98EE-C06FA0D5045F}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_Tresalia_Excel_Stg_StoneMiliner"
  DTS:PackageType="5"
  DTS:VersionBuild="216"
  DTS:VersionGUID="{1958358B-C77F-4F17-9D80-25F43EC3196A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConnectionManager_Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{946778A3-9036-4800-AA67-74F16C567B81}"
      DTS:ObjectName="ConnectionManager_Stage">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnectionMgr_Stage]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{56246F36-2A2A-48AE-8309-E1A906E38513}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::SourceFolderPath] + @[User::SourceFileName_StoneMiliner]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Tresalia\Anupam\Tresalia_ETL\Source\20151031.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="D:\Tresalia\Anupam\Tresalia_ETL\Config\Tresalia_ConnectionStrings.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{3816DF46-CD7A-4D3B-ADF1-A16AD42D1B50}"
      DTS:ObjectName="Configuration 1" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E837827-1FBD-4D00-9059-BFF393C35086}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F95A9DC5-9F72-481B-97EB-9F3C7ABECD84}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BatchDate_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C949363B-D854-41B5-A8C0-BE8ADE4C3B2B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionMgr_Stage">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A6BA0C8-FDA2-44A1-B0DE-70DC912E9FA4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Error\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62648AAA-6865-47A1-9029-C6CDD80F03FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMask_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">*.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18EDE738-5F0F-45EC-8DEC-495A62ABDD40}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolderPath_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Input\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74B665CE-DB1E-4042-9ABE-5BA2DE91E0F8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastDataRowNumber">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF3A346E-4D88-4E93-A63A-03995D31E216}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PeriodEndDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D257D58-9D7A-4CC6-9372-6DF4C4A2BCE5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PeriodEndDateCell_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">D1:E1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{162483DE-0D26-4C49-BEF1-38606675365B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedRecordsInFile">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05126EC2-21CF-48D6-8702-149F8747FCFF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStatus">
      <DTS:VariableValue
        DTS:DataType="8">SUCCESS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{756D054E-A884-4757-840D-02511659CC03}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Select * from [&quot; +  @[User::TabName_StoneMiliner] +  @[User::SelectedColumnRange] + &quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Query_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">Select * from [Page1_1$A7:T0]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3DFA9062-9F3A-417D-99D1-4E66E123E7F4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SelectedColumnRange_StoneMiliner] + (DT_STR,10,1252) @[User::LastDataRowNumber]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SelectedColumnRange">
      <DTS:VariableValue
        DTS:DataType="8">A7:T0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4538C89F-6C7F-4D1E-91A6-407517478753}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SelectedColumnRange_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">A7:T</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26867341-9974-433E-824D-5F1B55F6E49A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SheetList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B5BEEB7-00C2-49D8-9314-80D35FC307C7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileDateTime">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB18745D-8757-4AAA-ACEB-6EE697453D16}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{728849B6-D65F-4CB4-9E02-90E8EB9D118C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileName_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">20151031.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28469DB3-F9D8-4173-B4A1-BEC4BAE83894}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{879BC6F7-63DB-4232-90AF-06F72503B59E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartDate">
      <DTS:VariableValue
        DTS:DataType="7">3/24/2016 6:02:54 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{573D76C4-4875-47F4-BE2E-53EB9BD510A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TabName_StoneMiliner">
      <DTS:VariableValue
        DTS:DataType="8">Page1_1$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D79D0C28-8114-4A7E-8C0F-30BF6823CBE5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalRecordsInFile">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Staging Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2D9323A3-F170-44BF-AFED-202633E00F48}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Staging Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
          SQLTask:SqlStatementSource="exec stg.spClearStageTable 'StoneMiliner'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create TresaliaJobLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0BE4A232-C6B4-4058-91D3-A91253E2C13F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create TresaliaJobLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
          SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'StoneMilinerJobName','S'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageID"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D8E1A1B2-424C-4CCD-8F53-6A7D4E5C78CD}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{AB5C2BA9-4774-4D59-B1DD-AD63BCEEE7DD}"
        DTS:ObjectName="{AB5C2BA9-4774-4D59-B1DD-AD63BCEEE7DD}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::SourceFileList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{A228CB7C-AF1C-4C0D-99C2-5CF2835EC7A5}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_8d66de1345b54ed2ab02a299356047e4"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ArchiveFolderPath,User::SourceFileName_StoneMiliner,User::SourceFolderPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8d66de1345b54ed2ab02a299356047e4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public void Main()
        {
            // TODO: Add your code here
            string fileName = Dts.Variables["User::SourceFileName_StoneMiliner"].Value.ToString();
            string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            string archiveFolderPath = Dts.Variables["User::ArchiveFolderPath"].Value.ToString();
            this.ArchiveProcessedFile(fileName, sourceFolderPath, archiveFolderPath);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        public void ArchiveProcessedFile(string fileName, string sourceFolderPath, string archiveFolderPath)
        {
            string filePath = sourceFolderPath + "\\" + fileName;
            FileInfo fileInfo = new FileInfo(filePath);

            if (fileInfo.Exists)
            {
                string archivedFileFullName = archiveFolderPath + "\\" + Path.GetFileNameWithoutExtension(fileInfo.FullName) + fileInfo.Extension;
                FileInfo archiveFileInfo = new FileInfo(archivedFileFullName);

                if (archiveFileInfo.Exists)
                {
                    //If File already exist in Archive then overwrite the file in archive and delete from Source
                    File.Copy(fileInfo.FullName, archivedFileFullName, true);
                    File.Delete(fileInfo.FullName);
                }
                else
                {
                    //If File Doesn't exist in Archive then move the file in archive from Source
                    File.Move(fileInfo.FullName, archivedFileFullName);
                }

            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_8d66de1345b54ed2ab02a299356047e4.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{358C04C4-0B3A-410B-AED1-39C6B6D19DC2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8d66de1345b54ed2ab02a299356047e4</RootNamespace>
    <AssemblyName>ST_8d66de1345b54ed2ab02a299356047e4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_8d66de1345b54ed2ab02a299356047e4</msb:CodeName>
		<msb:DisplayName>ST_8d66de1345b54ed2ab02a299356047e4</msb:DisplayName>
		<msb:ProjectId>{6AB6CA7F-BDD4-4546-8FBB-4297DED05DCE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8d66de1345b54ed2ab02a299356047e4.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8d66de1345b54ed2ab02a299356047e4.Properties.Settings.get_Default():ST_8d66de1345b54ed2ab02a299356047e4.Properties.Sett" +
    "ings")]

namespace ST_8d66de1345b54ed2ab02a299356047e4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8d66de1345b54ed2ab02a299356047e4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8d66de1345b54ed2ab02a299356047e4")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8d66de1345b54ed2ab02a299356047e4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8d66de1345b54ed2ab02a299356047e4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8d66de1345b54ed2ab02a299356047e4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8d66de1345b54ed2ab02a299356047e4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8d66de1345b54ed2ab02a299356047e4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_8d66de1345b54ed2ab02a299356047e4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACbw/FYAAAAAAAAAAOAAAiELAQsAABIAAAAGAAAAAAAAvjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGwwAABPAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MAAAAAAAAEgAAAACAAUAgCIAAOwNAAABAAAAAAAAAMghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBAB2AAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApytwAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnLlAABwbxgAAApv
GQAACm8aAAAKDAIGBwgoCQAABgIoFgAAChZvGwAACioAABMwBABuAAAAAwAAEQRyFQEAcAMoHAAA
CgoGcx0AAAoLB28eAAAKLFEFchUBAHAHbx8AAAooIAAACgdvIQAACigiAAAKDAhzHQAACg0Jbx4A
AAosGQdvHwAACggXKCMAAAoHbx8AAAooJAAACioHbx8AAAoIKCUAAAoqHgIoJgAACioAAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAPAQAACN+AACo
BAAAfAYAACNTdHJpbmdzAAAAACQLAAAcAQAAI1VTAEAMAAAQAAAAI0dVSUQAAABQDAAAnAEAACNC
bG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACIAAAAFAAAABgAAAAoAAAAEAAAAJgAA
AAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoA
CgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgCYAn4CBgDDArECBgDaArECBgD3ArECBgAW
A7ECBgAvA7ECBgBIA7ECBgBjA7ECBgB+A7ECBgCXA7ECBgDQA7ADBgDwA7ADBgAhBA4EBgA+BLoA
BgBDBLoABgBnBLECCgCTBH0ECgCsBH0EBgDBBLADDgDjBBQBDgAFBRQBEgBeBT4FEgB2BT4FBgCq
BboABgDCBbgFBgDLBbgFBgDyBbgFBgAhBrgFAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAAB
EABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEABAALABEAfwETABEArAEXABEA9gE5
AAYGNAJOAFaAPAJRAFaARAJRAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYB
JAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY3ASQ
AAIAvCAAAAAAhgAaAhsAAgBAIQAAAACGAB8CRwACALohAAAAAIYYvAEbAAUAAAABAEwCAAABAFIC
AAACAFsCAAADAGwCOQC8AV8AQQC8AV8ASQC8AV8AUQC8AV8AWQC8AV8AYQC8AV8AaQC8AV8AcQC8
AV8AeQC8AV8AgQC8AV8AiQC8AWQAkQC8ARsAmQC8ARsACQC8ARsAoQBVBGkAoQBwBHAAKQC8AXUA
uQC8AYEAyQC8ARsAEQC8ARsA0QC8ARsAGQAXBZQA2QBoBZkA4QB/BZ4A6QCIBaQACQCSBagA2QCb
BWQA8QCxBbIA+QC8AV8AAQHaBbkAAQHlBagACQH3Bb0AAQETBqgA8QCxBcIAEQEmBsoAEQErBtEA
EQEyBtYAGQC8ARsACAAUAFUACAAYAFoAKQCTAIcALgAbAFYBLgAjAFYBLgBjAHwBLgALAOUALgAT
AC0BLgAzAC0BLgArAFYBLgA7AFwBLgBDAFYBLgBbAHMBQwBrAFoASQCTAIcAYQCbAFoAgwCrAFoA
fACsANwAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAE
gAAAAQAAAC4XkwsAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoA
AAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgAfBQAAAAAAAAAAAQAAADcGAAAF
AAQAAAAAAAA8TW9kdWxlPgBTVF84ZDY2ZGUxMzQ1YjU0ZWQyYWIwMmEyOTkzNTYwNDdlNC5kbGwA
UmVzb3VyY2VzAFNUXzhkNjZkZTEzNDViNTRlZDJhYjAyYTI5OTM1NjA0N2U0LlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF84ZDY2ZGUxMzQ1YjU0ZWQyYWIwMmEyOTkzNTYwNDdlNABT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAEFyY2hpdmVQcm9jZXNzZWRGaWxl
AHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGZpbGVOYW1lAHNvdXJjZUZvbGRlclBhdGgA
YXJjaGl2ZUZvbGRlclBhdGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3Vs
dHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1i
bHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNj
dG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABn
ZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdl
dF9WYWx1ZQBUb1N0cmluZwBzZXRfVGFza1Jlc3VsdABTdHJpbmcAQ29uY2F0AFN5c3RlbS5JTwBG
aWxlSW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfRXhpc3RzAGdldF9GdWxsTmFtZQBQYXRoAEdldEZp
bGVOYW1lV2l0aG91dEV4dGVuc2lvbgBnZXRfRXh0ZW5zaW9uAEZpbGUAQ29weQBEZWxldGUATW92
ZQBTVF84ZDY2ZGUxMzQ1YjU0ZWQyYWIwMmEyOTkzNTYwNDdlNC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAAAAcVMAVABfADgAZAA2ADYAZABlADEAMwA0ADUAYgA1ADQAZQBkADIAYQBi
ADAAMgBhADIAOQA5ADMANQA2ADAANAA3AGUANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAQ1UAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAaQBsAGUATgBhAG0AZQBf
AFMAdABvAG4AZQBNAGkAbABpAG4AZQByAAAtVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwA
ZABlAHIAUABhAHQAaAAAL1UAcwBlAHIAOgA6AEEAcgBjAGgAaQB2AGUARgBvAGwAZABlAHIAUABh
AHQAaAAAA1wAAAAAAM4+MxaazfRBpYRxLO5QHbMACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkD
IAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAYgAwEODg4CBggDBhEU
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBQcDDg4OBgADDg4ODgMgAAIEAAEODgcABA4O
Dg4OBgADAQ4OAgQAAQEOBQACAQ4OCAcEDhJ9DhJ9RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzhkNjZk
ZTEzNDViNTRlZDJhYjAyYTI5OTM1NjA0N2U0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAlDAAAAAAAAAAAAAArjAA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAwAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAJMLLhcAAAEAkwsuFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA4AGQANgA2AGQAZQAxADMANAA1AGIANQA0AGUAZAAyAGEAYgAwADIAYQAyADkAOQAzADUANgAw
ADQANwBlADQAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADMA
NAAuADIAOQA2ADMAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADgAZAA2
ADYAZABlADEAMwA0ADUAYgA1ADQAZQBkADIAYQBiADAAMgBhADIAOQA5ADMANQA2ADAANAA3AGUA
NAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADgAZAA2ADYAZABlADEAMwA0ADUAYgA1ADQAZQBkADIAYQBiADAAMgBh
ADIAOQA5ADMANQA2ADAANAA3AGUANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA4AGQANgA2AGQAZQAxADMANAA1AGIANQA0AGUAZAAyAGEAYgAwADIAYQAy
ADkAOQAzADUANgAwADQANwBlADQAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOQAzADQALgAyADkANgAzAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA5ADMANAAuADIAOQA2ADMAAAAAAAAAADAAAAwAAADAMAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create FillHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6A772D62-E11D-45B7-8762-C6C3FEF09D94}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FillHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
              SQLTask:SqlStatementSource="exec stg.spCreateFileHistory ?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFileName"
                SQLTask:DtsVariableName="User::SourceFileName_StoneMiliner"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_StoneMiliner"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TotalRecordsInFile"
                SQLTask:DtsVariableName="User::TotalRecordsInFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0CBEEB70-C75D-4F88-A5B3-65DFBA5B6004}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Loading Excel Sheet Data To Table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{8E857BBA-5BDC-4DCD-A78A-18A0B885A623}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{93374417-3611-4471-A1B9-5A306AC33795}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Instrument Super Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Instrument Super Type"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Super Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Instrument Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Instrument Type"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Ticker]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Ticker"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Ticker]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Instrument Sub Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Instrument Sub Type"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Sub Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[ISIN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ISIN"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISIN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Issuer]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Issuer"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Issuer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Industry Sector 1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Industry Sector 1"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Industry Sector 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Region]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Region"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Country of Issue]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Country of Issue"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country of Issue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Investment Ccy]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Investment Ccy"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Investment Ccy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Long/Short Indicator]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Long/Short Indicator"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Long/Short Indicator]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Number of Contracts]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Number of Contracts"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Number of Contracts]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Contract Multiplier]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Contract Multiplier"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Contract Multiplier]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Strike]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Strike"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Strike]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[MaturityExpiration]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MaturityExpiration"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MaturityExpiration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Notional (USD)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Notional (USD)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Notional (USD)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Market Value (USD)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Market Value (USD)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Market Value (USD)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Accrued Interest (USD)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Accrued Interest (USD)"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Accrued Interest (USD)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input].Columns[Net Market Value]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Net Market Value"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Net Market Value]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Super Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Super Type]"
                          name="DC.Instrument Super Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Super Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Type]"
                          name="DC.Instrument Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Description]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Description]"
                          name="DC.Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Ticker]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Ticker]"
                          name="DC.Ticker"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Ticker]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Sub Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Sub Type]"
                          name="DC.Instrument Sub Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Sub Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISIN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISIN]"
                          name="DC.ISIN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISIN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Issuer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Issuer]"
                          name="DC.Issuer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Issuer]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Industry Sector 1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Industry Sector 1]"
                          name="DC.Industry Sector 1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Industry Sector 1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]"
                          name="DC.Region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country of Issue]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country of Issue]"
                          name="DC.Country of Issue"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country of Issue]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Investment Ccy]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Investment Ccy]"
                          name="DC.Investment Ccy"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Investment Ccy]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Long/Short Indicator]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Long/Short Indicator]"
                          name="DC.Long/Short Indicator"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Long/Short Indicator]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Number of Contracts]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Number of Contracts]"
                          name="DC.Number of Contracts"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Number of Contracts]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Contract Multiplier]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Contract Multiplier]"
                          name="DC.Contract Multiplier"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Contract Multiplier]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Strike]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Strike]"
                          name="DC.Strike"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Strike]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MaturityExpiration]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MaturityExpiration]"
                          name="DC.MaturityExpiration"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MaturityExpiration]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Notional (USD)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Notional (USD)]"
                          name="DC.Notional (USD)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Notional (USD)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Market Value (USD)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Market Value (USD)]"
                          name="DC.Market Value (USD)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Market Value (USD)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Accrued Interest (USD)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Accrued Interest (USD)]"
                          name="DC.Accrued Interest (USD)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Accrued Interest (USD)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Net Market Value]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Net Market Value]"
                          name="DC.Net Market Value"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Net Market Value]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFileName_StoneMiliner]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFileName_StoneMiliner]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          name="Filepath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          name="TabName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::TabName_StoneMiliner]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::TabName_StoneMiliner]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          name="BatchDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::BatchDate_StoneMiliner]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::BatchDate_StoneMiliner]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[PeriodEndDate]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[PeriodEndDate]"
                          name="PeriodEndDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::PeriodEndDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::PeriodEndDate]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Master$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::Query_StoneMiliner</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Super Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Super Type]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Super Type]"
                          name="Instrument Super Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Type]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Type]"
                          name="Instrument Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Ticker]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ticker]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Ticker]"
                          name="Ticker"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Sub Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Sub Type]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Instrument Sub Type]"
                          name="Instrument Sub Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISIN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISIN]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[ISIN]"
                          name="ISIN"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Issuer]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Issuer]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Issuer]"
                          name="Issuer"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Industry Sector 1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Industry Sector 1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Industry Sector 1]"
                          name="Industry Sector 1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Region]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Region]"
                          name="Region"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country of Issue]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country of Issue]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Country of Issue]"
                          name="Country of Issue"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Investment Ccy]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Investment Ccy]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Investment Ccy]"
                          name="Investment Ccy"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Long/Short Indicator]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Long/Short Indicator]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Long/Short Indicator]"
                          name="Long/Short Indicator"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Number of Contracts]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of Contracts]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Number of Contracts]"
                          name="Number of Contracts"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Contract Multiplier]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Contract Multiplier]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Contract Multiplier]"
                          name="Contract Multiplier"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Strike]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Strike]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Strike]"
                          name="Strike"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MaturityExpiration]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MaturityExpiration]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[MaturityExpiration]"
                          name="MaturityExpiration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Notional (USD)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Notional (USD)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Notional (USD)]"
                          name="Notional (USD)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Market Value (USD)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Market Value (USD)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Market Value (USD)]"
                          name="Market Value (USD)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Accrued Interest (USD)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accrued Interest (USD)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Accrued Interest (USD)]"
                          name="Accrued Interest (USD)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Net Market Value]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Net Market Value]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].Columns[Net Market Value]"
                          name="Net Market Value"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Super Type]"
                          dataType="wstr"
                          length="255"
                          name="Instrument Super Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Type]"
                          dataType="wstr"
                          length="255"
                          name="Instrument Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Ticker]"
                          dataType="wstr"
                          length="255"
                          name="Ticker" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Instrument Sub Type]"
                          dataType="wstr"
                          length="255"
                          name="Instrument Sub Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[ISIN]"
                          dataType="wstr"
                          length="255"
                          name="ISIN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Issuer]"
                          dataType="wstr"
                          length="255"
                          name="Issuer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Industry Sector 1]"
                          dataType="wstr"
                          length="255"
                          name="Industry Sector 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Region]"
                          dataType="wstr"
                          length="255"
                          name="Region" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country of Issue]"
                          dataType="wstr"
                          length="255"
                          name="Country of Issue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Investment Ccy]"
                          dataType="wstr"
                          length="255"
                          name="Investment Ccy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Long/Short Indicator]"
                          dataType="wstr"
                          length="255"
                          name="Long/Short Indicator" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of Contracts]"
                          dataType="r8"
                          name="Number of Contracts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Contract Multiplier]"
                          dataType="r8"
                          name="Contract Multiplier" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Strike]"
                          dataType="r8"
                          name="Strike" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[MaturityExpiration]"
                          dataType="date"
                          name="MaturityExpiration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Notional (USD)]"
                          dataType="r8"
                          name="Notional (USD)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Market Value (USD)]"
                          dataType="r8"
                          name="Market Value (USD)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Accrued Interest (USD)]"
                          dataType="r8"
                          name="Accrued Interest (USD)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Net Market Value]"
                          dataType="r8"
                          name="Net Market Value" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Super Type]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Super Type]"
                          name="Instrument Super Type" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Type]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Type]"
                          name="Instrument Type" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Ticker]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Ticker]"
                          name="Ticker" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Sub Type]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Instrument Sub Type]"
                          name="Instrument Sub Type" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISIN]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ISIN]"
                          name="ISIN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Issuer]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Issuer]"
                          name="Issuer" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Industry Sector 1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Industry Sector 1]"
                          name="Industry Sector 1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Region]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Region]"
                          name="Region" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Country of Issue]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Country of Issue]"
                          name="Country of Issue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Investment Ccy]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Investment Ccy]"
                          name="Investment Ccy" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Long/Short Indicator]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Long/Short Indicator]"
                          name="Long/Short Indicator" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Number of Contracts]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Number of Contracts]"
                          name="Number of Contracts" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Contract Multiplier]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Contract Multiplier]"
                          name="Contract Multiplier" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Strike]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Strike]"
                          name="Strike" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MaturityExpiration]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[MaturityExpiration]"
                          name="MaturityExpiration" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Notional (USD)]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Notional (USD)]"
                          name="Notional (USD)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Market Value (USD)]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Market Value (USD)]"
                          name="Market Value (USD)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Accrued Interest (USD)]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Accrued Interest (USD)]"
                          name="Accrued Interest (USD)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Net Market Value]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[Net Market Value]"
                          name="Net Market Value" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[StoneMiliner]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConnectionManager_Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[ConnectionManager_Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Filepath]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Filepath"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[Filepath]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TabName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="TabName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[TabName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BatchDate]"
                          cachedDataType="date"
                          cachedName="BatchDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PeriodEndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="PeriodEndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PeriodEndDate]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output].Columns[PeriodEndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Instrument Super Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Instrument Super Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Super Type]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Super Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Instrument Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Instrument Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Type]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Ticker]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Ticker"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ticker]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Ticker]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Instrument Sub Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Instrument Sub Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Sub Type]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Instrument Sub Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.ISIN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.ISIN"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISIN]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.ISIN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Issuer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Issuer"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Issuer]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Issuer]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Industry Sector 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Industry Sector 1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Industry Sector 1]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Industry Sector 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Region"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Region]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Country of Issue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Country of Issue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country of Issue]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Country of Issue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Investment Ccy]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Investment Ccy"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Investment Ccy]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Investment Ccy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Long/Short Indicator]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Long/Short Indicator"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Long/Short Indicator]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Long/Short Indicator]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Number of Contracts]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Number of Contracts"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Number of Contracts]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Number of Contracts]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Contract Multiplier]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Contract Multiplier"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Contract Multiplier]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Contract Multiplier]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Strike]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Strike"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Strike]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Strike]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.MaturityExpiration]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.MaturityExpiration"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaturityExpiration]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.MaturityExpiration]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Net Market Value]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Net Market Value"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Net Market Value]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Net Market Value]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Notional (USD)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Notional (USD)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Notional (USD)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Notional (USD)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Market Value (USD)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Market Value (USD)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Market Value (USD)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Market Value (USD)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DC.Accrued Interest (USD)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="DC.Accrued Interest (USD)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Accrued Interest (USD)]"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output].Columns[DC.Accrued Interest (USD)]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FilePath" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="TabName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CreatedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          dataType="dbDate"
                          name="BatchDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PeriodEndDate]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="PeriodEndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Super Type]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Instrument Super Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Type]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Instrument Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Ticker]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Ticker" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Instrument Sub Type]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Instrument Sub Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ISIN]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="ISIN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Issuer]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Issuer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Industry Sector 1]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Industry Sector 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Region]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Region" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country of Issue]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Country of Issue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Investment Ccy]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Investment Ccy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Long/Short Indicator]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Long/Short Indicator" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Number of Contracts]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Number of Contracts" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Contract Multiplier]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Contract Multiplier" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Strike]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Strike" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MaturityExpiration]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="MaturityExpiration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Net Market Value]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Net Market Value" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Notional (USD)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Notional (USD)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Market Value (USD)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Market Value (USD)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Accrued Interest (USD)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Accrued Interest (USD)" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::TotalRecordsInFile</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Inputs[Row Count Input 1]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Derived Column.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Loading Excel Sheet Data To Table\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Logging Error"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{3275CF92-1622-491C-B40D-BF75B9A4F19F}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logging Error"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7eff9bae40954ac3a8839c3dcb1ca047"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{E7788D62-E8BF-4C55-B465-E82F9D87CA31}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_b10f5ec150d7414d9175ddbaccd4c013"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::BatchDate_StoneMiliner,User::ConnectionMgr_Stage,User::SelectedColumnRange_StoneMiliner,User::SourceFileName_StoneMiliner,User::SourceFolderPath"
              ReadWriteVariables="User::LastDataRowNumber,User::PeriodEndDate,User::PeriodEndDateCell_StoneMiliner,User::ProcessedRecordsInFile,User::TabName_StoneMiliner,User::TotalRecordsInFile">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_b10f5ec150d7414d9175ddbaccd4c013.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A272F0DC-F20D-4D74-951E-FE77E2258695}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b10f5ec150d7414d9175ddbaccd4c013</RootNamespace>
    <AssemblyName>ST_b10f5ec150d7414d9175ddbaccd4c013</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_b10f5ec150d7414d9175ddbaccd4c013
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public void Main()
        {
            // TODO: Add your code here

            String ErrInfo = "";
            String sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            String sourceFileName = Dts.Variables["User::SourceFileName_StoneMiliner"].Value.ToString();
            String FilePath = sourceFolderPath + sourceFileName;

            //try
            //{                
            ReadFile(FilePath, ErrInfo);
            if (ErrInfo.Length > 0)
            {
                Dts.Log("Error while reading File " + FilePath, 0, null);
                Dts.Log(ErrInfo, 0, null);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            else
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }


        public void ReadFile(String FilePath, String ErrInfo)
        {
            string strConnection = string.Empty;
            //try
            //{
            string tabName = Dts.Variables["User::TabName_StoneMiliner"].Value.ToString();
            string selectedColumnRange = Dts.Variables["User::SelectedColumnRange_StoneMiliner"].Value.ToString();
            string periodEndDateCell = Dts.Variables["User::PeriodEndDateCell_StoneMiliner"].Value.ToString();

            DateTime BatchDate = DateTime.Now;
            if (Dts.Variables["User::BatchDate_StoneMiliner"].Value.ToString().Trim().Length > 0)
            {
                BatchDate = Convert.ToDateTime(Dts.Variables["User::BatchDate_StoneMiliner"].Value.ToString().Trim());
            }

            strConnection = String.Format(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + ";Extended Properties=\"Excel 12.0 Xml;HDR=NO;IMEX=1\";");

            GetPeriodEndDateValue(strConnection, tabName, periodEndDateCell);
            GetLastDataRowNumber(strConnection, tabName, selectedColumnRange);
        }

        private void GetPeriodEndDateValue(string connectionString, string tabName, string selectedColumnRange)
        {
            OleDbConnection objConnection = new OleDbConnection(connectionString);
            objConnection.Open();
            DataTable colTables = objConnection.GetSchema("Tables");

            string strSQL = "Select * From [" + tabName + selectedColumnRange + "]";

            OleDbDataAdapter objAdapter = new OleDbDataAdapter(strSQL, objConnection);
            DataTable dt = new DataTable();
            objAdapter.Fill(dt);

            //Close Connection
            objConnection.Close();
            if (dt.Rows.Count > 0)
            {
                Dts.Variables["User::PeriodEndDate"].Value = dt.Rows[0][1].ToString().Trim();
            }
        }

        private void GetLastDataRowNumber(string connectionString, string tabName, string selectedColumnRange)
        {
            OleDbConnection objConnection = new OleDbConnection(connectionString);
            objConnection.Open();
            DataTable colTables = objConnection.GetSchema("Tables");

            string strSQL = "Select * From [" + tabName + selectedColumnRange + "]";

            OleDbDataAdapter objAdapter = new OleDbDataAdapter(strSQL, objConnection);
            DataTable dt = new DataTable();
            objAdapter.Fill(dt);

            //Close Connection
            objConnection.Close();
            //Delete the Date header
            int disclaimerRowIndex = 0;
            foreach (DataRow dr in dt.Rows)
            {
                disclaimerRowIndex++;
                if (dr[0].ToString().Trim().ToUpper() == "DISCLAIMER")
                    break;
            }
            //dt.Rows[dateRowHeaderIndex-1].Delete();
            //dt.AcceptChanges();

            if (dt.Rows.Count > 0)
            {
                int ColumnHeaderRowNumber = Convert.ToInt32(selectedColumnRange.Split(':')[0].TrimStart('A'));
                Dts.Variables["User::LastDataRowNumber"].Value = disclaimerRowIndex + ColumnHeaderRowNumber - 3;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_b10f5ec150d7414d9175ddbaccd4c013</msb:CodeName>
		<msb:DisplayName>ST_b10f5ec150d7414d9175ddbaccd4c013</msb:DisplayName>
		<msb:ProjectId>{76B8D499-FDC9-41AF-8EDE-7143B1191A8B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_b10f5ec150d7414d9175ddbaccd4c013.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Settings.get_Default():ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Sett" +
    "ings")]

namespace ST_b10f5ec150d7414d9175ddbaccd4c013.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b10f5ec150d7414d9175ddbaccd4c013")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b10f5ec150d7414d9175ddbaccd4c013")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b10f5ec150d7414d9175ddbaccd4c013.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b10f5ec150d7414d9175ddbaccd4c013.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_b10f5ec150d7414d9175ddbaccd4c013.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM7v/FYAAAAAAAAAAOAAAiELAQsAABoAAAAGAAAAAAAArjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFg4AABTAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
OAAAAAAAAEgAAAACAAUACCUAAFATAAABAAAAAAAAAFAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACsAAAAAgAAEXJzAABwCgIoFgAACm8XAAAKcnUAAHBvGAAACm8Z
AAAKbxoAAAoLAigWAAAKbxcAAApyowAAcG8YAAAKbxkAAApvGgAACgwHCCgbAAAKDQIJBigJAAAG
Bm8cAAAKFjE0AigWAAAKcucAAHAJKBsAAAoWFG8dAAAKAigWAAAKBhYUbx0AAAoCKBYAAAoXbx4A
AAorDAIoFgAAChZvHgAACgIoFgAAChZvHgAACioTMAQA8QAAAAIAABF+HwAACgoCKBYAAApvFwAA
CnIbAQBwbxgAAApvGQAACm8aAAAKCwIoFgAACm8XAAAKclEBAHBvGAAACm8ZAAAKbxoAAAoMAigW
AAAKbxcAAApynwEAcG8YAAAKbxkAAApvGgAACg0oIAAACiYCKBYAAApvFwAACnLpAQBwbxgAAApv
GQAACm8aAAAKbyEAAApvHAAAChYxKgIoFgAACm8XAAAKcukBAHBvGAAACm8ZAAAKbxoAAApvIQAA
CigiAAAKJnIjAgBwA3KBAgBwKCMAAAoWjQEAAAEoJAAACgoCBgcJKAoAAAYCBgcIKAsAAAYqAAAA
EzAEAIwAAAADAAARA3MlAAAKCgZvJgAACgZy6wIAcG8nAAAKJnL5AgBwBAVyGQMAcCgoAAAKCwcG
cykAAAoMcyoAAAoNCAlvKwAACiYGbywAAAoJby0AAApvLgAAChYxNgIoFgAACm8XAAAKch0DAHBv
GAAACglvLQAAChZvLwAAChdvMAAACm8aAAAKbyEAAApvMQAACiobMAQAGQEAAAQAABEDcyUAAAoK
Bm8mAAAKBnLrAgBwbycAAAomcvkCAHAEBXIZAwBwKCgAAAoLBwZzKQAACgxzKgAACg0ICW8rAAAK
JgZvLAAAChYTBAlvLQAACm8yAAAKEwcrNxEHbzMAAAp0KAAAARMFEQQXWBMEEQUWbzAAAApvGgAA
Cm8hAAAKbzQAAApyRQMAcCg1AAAKLQkRB282AAAKLcDeFREHdSoAAAETCBEILAcRCG83AAAK3Alv
LQAACm8uAAAKFjFaBReNKwAAARMJEQkWHzqdEQlvOAAAChaaF40rAAABEwoRChYfQZ0RCm85AAAK
KDoAAAoTBgIoFgAACm8XAAAKclsDAHBvGAAAChEEEQZYGVmMLAAAAW8xAAAKKgAAAAEQAAACAFcA
RJsAFQAAAAAeAig7AAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAARAUAACN+AACwBQAA5AcAACNTdHJpbmdzAAAAAJQNAACMAwAAI1VTACARAAAQ
AAAAI0dVSUQAAAAwEQAAIAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACwA
AAAFAAAABgAAAAwAAAAJAAAAOwAAAAIAAAAPAAAABAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAA
AAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBBgDJAq8C
BgD0AuICBgALA+ICBgAoA+ICBgBHA+ICBgBgA+ICBgB5A+ICBgCUA+ICBgCvA+ICBgDIA+ICBgAB
BOEDBgAhBOEDBgBSBD8EBgBvBLoABgB0BLoABgCYBOICCgDEBK4ECgDdBK4EBgDyBOEDDgAUBRQB
DgA2BRQBEgCPBW8FEgCnBW8FBgDMBboABgD+BboABgAUBroAFgBMBjoGFgBvBlwGFgCBBi4GFgCV
BjoGFgCmBlwGFgC/Bi4GFgDaBi4GFgD/Bi4GBgAkBxEHBgBnB7oABgB7B7oABgCYB7oAAAAAAAEA
AAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAA
ABEABAANABEAfwETABEArAEXABEA9gE5AAYGUwJUAFaAWwJXAFaAYwJXAFAgAAAAAIMYvAEbAAEA
WCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCz
IAAAAACGGLwBGwACAKcgAAAAAJEYDQWWAAIAvCAAAAAAhgAaAhsAAgB0IQAAAACGAB8CRwACAHQi
AAAAAIEAKAJNAAQADCMAAAAAgQA+Ak0ABwBEJAAAAACGGLwBGwAKAAAAAQBrAgAAAQBxAgAAAgB6
AgAAAQCCAgAAAgCTAgAAAwCbAgAAAQCCAgAAAgCTAgAAAwCbAjkAvAFlAEEAvAFlAEkAvAFlAFEA
vAFlAFkAvAFlAGEAvAFlAGkAvAFlAHEAvAFlAHkAvAFlAIEAvAFlAIkAvAFqAJEAvAEbAJkAvAEb
AAkAvAEbAKEAhgRvAKEAoQR2ACkAvAF7ALkAvAGHAMkAvAEbABEAvAEbANEAvAEbABkASAWaANkA
mQWfAOEAsAWkAOkAuQWqAAkAwwWuAPEA0wWyAPEA2gW4ANkA5QW8ANkA6QVqAPEA+AXLAPkABwbO
APEADwauAAEBHAbTAPEA0wXZAPEAJwbgAAkBvAFlABEBfAYbABEBiwbnAPEA0wXuACEBvAH2ABkB
vAEbACkBtAb+ABEBuQYbABkB0QYFATkB9Qa4ADEBsAULAUEBsAUSAekABwcXATkBMAcpAUkBPgeq
APEASgeuAPEAUgcvAUkBXgc1AVEBcwcbAPEAgAc5AfEAhgdAAQEBkAdGARkAvAEbAAgAFABbAAgA
GABgACkAkwCNAC4AGwDYAS4AIwDYAS4AYwD+AS4ACwBnAS4AEwCvAS4AMwCvAS4AKwDYAS4AOwDe
AS4AQwDYAS4AWwD1AUMAawBgAEkAkwCNAGEAmwBgAIMAqwBgAIIAxAAcAUsBAgABAAMAAwAAAG8B
LwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAC4XZwsAAAAAAAB/
AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAwAAAAAAAAAAAAAAAoA
9QAAAAAADAAAAAAAAAAAAAAACgBQBQAAAAAEAAAAAAAAAAAAAAABAC4GAAAAAAAAAAABAAAAngcA
AAUABAAAAAA8TW9kdWxlPgBTVF9iMTBmNWVjMTUwZDc0MTRkOTE3NWRkYmFjY2Q0YzAxMy5kbGwA
UmVzb3VyY2VzAFNUX2IxMGY1ZWMxNTBkNzQxNGQ5MTc1ZGRiYWNjZDRjMDEzLlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9iMTBmNWVjMTUwZDc0MTRkOTE3NWRkYmFjY2Q0YzAxMwBT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAFJlYWRGaWxlAEdldFBlcmlvZEVu
ZERhdGVWYWx1ZQBHZXRMYXN0RGF0YVJvd051bWJlcgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2
YWx1ZQBGaWxlUGF0aABFcnJJbmZvAGNvbm5lY3Rpb25TdHJpbmcAdGFiTmFtZQBzZWxlY3RlZENv
bHVtblJhbmdlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9B
c3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUA
VG9TdHJpbmcAU3RyaW5nAENvbmNhdABnZXRfTGVuZ3RoAExvZwBzZXRfVGFza1Jlc3VsdABFbXB0
eQBEYXRlVGltZQBnZXRfTm93AFRyaW0AQ29udmVydABUb0RhdGVUaW1lAEZvcm1hdABTeXN0ZW0u
RGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBPbGVEYkNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AERiQ29ubmVjdGlvbgBPcGVuAERhdGFUYWJsZQBHZXRTY2hlbWEAT2xlRGJEYXRhQWRhcHRlcgBE
YkRhdGFBZGFwdGVyAEZpbGwAQ2xvc2UARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJu
YWxEYXRhQ29sbGVjdGlvbkJhc2UAZ2V0X0NvdW50AERhdGFSb3cAc2V0X1ZhbHVlAFN5c3RlbS5D
b2xsZWN0aW9ucwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFRvVXBwZXIA
b3BfRXF1YWxpdHkATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBDaGFyAFNwbGl0AFRyaW1T
dGFydABUb0ludDMyAEludDMyAFNUX2IxMGY1ZWMxNTBkNzQxNGQ5MTc1ZGRiYWNjZDRjMDEzLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABfAGIAMQAwAGYANQBlAGMAMQA1
ADAAZAA3ADQAMQA0AGQAOQAxADcANQBkAGQAYgBhAGMAYwBkADQAYwAwADEAMwAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAQAtVQBzAGUAcgA6ADoAUwBvAHUAcgBj
AGUARgBvAGwAZABlAHIAUABhAHQAaAAAQ1UAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAaQBsAGUA
TgBhAG0AZQBfAFMAdABvAG4AZQBNAGkAbABpAG4AZQByAAAzRQByAHIAbwByACAAdwBoAGkAbABl
ACAAcgBlAGEAZABpAG4AZwAgAEYAaQBsAGUAIAAANVUAcwBlAHIAOgA6AFQAYQBiAE4AYQBtAGUA
XwBTAHQAbwBuAGUATQBpAGwAaQBuAGUAcgAATVUAcwBlAHIAOgA6AFMAZQBsAGUAYwB0AGUAZABD
AG8AbAB1AG0AbgBSAGEAbgBnAGUAXwBTAHQAbwBuAGUATQBpAGwAaQBuAGUAcgAASVUAcwBlAHIA
OgA6AFAAZQByAGkAbwBkAEUAbgBkAEQAYQB0AGUAQwBlAGwAbABfAFMAdABvAG4AZQBNAGkAbABp
AG4AZQByAAA5VQBzAGUAcgA6ADoAQgBhAHQAYwBoAEQAYQB0AGUAXwBTAHQAbwBuAGUATQBpAGwA
aQBuAGUAcgAAXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUALgBP
AEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AAGk7AEUAeAB0AGUA
bgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAgADEAMgAuADAAIABY
AG0AbAA7AEgARABSAD0ATgBPADsASQBNAEUAWAA9ADEAIgA7AAANVABhAGIAbABlAHMAAB9TAGUA
bABlAGMAdAAgACoAIABGAHIAbwBtACAAWwAAA10AACdVAHMAZQByADoAOgBQAGUAcgBpAG8AZABF
AG4AZABEAGEAdABlAAAVRABJAFMAQwBMAEEASQBNAEUAUgAAL1UAcwBlAHIAOgA6AEwAYQBzAHQA
RABhAHQAYQBSAG8AdwBOAHUAbQBiAGUAcgAAAJeMwTVhUPFKlzr2ciT1tzIACLd6XFYZNOCJCImE
Xc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAAS
DAUgAgEODgYgAwEODg4CBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIB
DhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBQACDg4O
AyAACAcgAwEOCB0FBgcEDg4ODgIGDgQAABF9BQABEX0OBgADDg4ODgYAAg4OHRwGIAESgI0OBwAE
Dg4ODg4HIAIBDhKAhQYgAQgSgI0FIAASgJkGIAESgKEIBCABHAgEIAEBHAwHBBKAhQ4SgJESgI0F
IAASgKUFAAICDg4DIAACBiABHQ4dAwUgAQ4dAwQAAQgOGwcLEoCFDhKAkRKAjQgSgKEIEoClEoCp
HQMdA0cBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9iMTBmNWVjMTUwZDc0MTRkOTE3NWRkYmFjY2Q0YzAx
MwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBAAAAgDgAAAAAAAAAAAAAnjgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AJA4AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACkAwAAAAAAAAAAAACkAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAZwsuFwAAAQBnCy4XPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEBAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA4AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGIA
MQAwAGYANQBlAGMAMQA1ADAAZAA3ADQAMQA0AGQAOQAxADcANQBkAGQAYgBhAGMAYwBkADQAYwAw
ADEAMwAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADkAMwA0AC4A
MgA5ADEAOQAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYgAxADAAZgA1
AGUAYwAxADUAMABkADcANAAxADQAZAA5ADEANwA1AGQAZABiAGEAYwBjAGQANABjADAAMQAzAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYgAxADAAZgA1AGUAYwAxADUAMABkADcANAAxADQAZAA5ADEANwA1AGQAZABi
AGEAYwBjAGQANABjADAAMQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGIAMQAwAGYANQBlAGMAMQA1ADAAZAA3ADQAMQA0AGQAOQAxADcANQBkAGQAYgBh
AGMAYwBkADQAYwAwADEAMwAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANQA5ADMANAAuADIAOQAxADkAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA1ADkAMwA0AC4AMgA5ADEAOQAAAAAAAAAAMAAADAAAALA4AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update FileHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9AAD6A77-0EDF-4CBB-A18D-DC2813E25833}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update FileHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="exec stg.spUpdateFileHistory ?,?,?,?,?,?, 'StoneMiliner'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFilePath"
                SQLTask:DtsVariableName="User::ArchiveFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFileName"
                SQLTask:DtsVariableName="User::SourceFileName_StoneMiliner"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ProcessingStatus"
                SQLTask:DtsVariableName="User::ProcessingStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_StoneMiliner"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TotalRecordsInFile"
                SQLTask:DtsVariableName="User::TotalRecordsInFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6C4A779A-82CE-462E-B0D3-B3826B516B26}"
          DTS:From="Package\Foreach Loop Container\Create FillHistory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{5A3B655B-A1D9-4CF2-A140-E901D4951A64}"
          DTS:From="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Archive" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{AF5ED425-E084-4939-9180-E8C7CD7A1636}"
          DTS:From="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Logging Error"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C9897B15-0027-4CB0-9DBB-2638AD5DE99C}"
          DTS:From="Package\Foreach Loop Container\Archive"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Update FileHistory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{CE1A3D26-7500-43D0-A8C7-E5070D88677E}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Loading Excel Sheet Data To Table" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4F4F0D6C-2FE1-4F4D-9CC8-8864381EFF40}"
          DTS:ObjectName="{4F4F0D6C-2FE1-4F4D-9CC8-8864381EFF40}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SourceFileName_StoneMiliner" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get List of Files To Be Processed"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{FC5AAE0C-7F39-4489-A8C0-16D06E3C5A27}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get List of Files To Be Processed"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1ed4767484b04602b705956bcd95a826"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FileMask_StoneMiliner,User::InputFolderPath_StoneMiliner,User::SourceFolderPath,User::StartDate"
          ReadWriteVariables="User::SourceFileList">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ed4767484b04602b705956bcd95a826.Properties.Settings.get_Default():ST_1ed4767484b04602b705956bcd95a826.Properties.Sett" +
    "ings")]

namespace ST_1ed4767484b04602b705956bcd95a826.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1ed4767484b04602b705956bcd95a826
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        Dictionary<DateTime, string> dicFileList = new Dictionary<DateTime, string>();
        Dictionary<DateTime, string> dicFileListSorted = new Dictionary<DateTime, string>();

        public const string charBetweenFileNameAndFileExtention = ".";
        public const string charInHiddenFileName = "~";
        public const string charInFileMask = "*";
        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string fileName = string.Empty;
            string inputFolderPath = Dts.Variables["User::InputFolderPath_StoneMiliner"].Value.ToString();
            string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            string fileMask = Dts.Variables["User::FileMask_StoneMiliner"].Value.ToString();
            DateTime startDateTime = Convert.ToDateTime(Dts.Variables["User::StartDate"].Value.ToString().Trim());

            this.CopyFilesFromInputToSource(inputFolderPath, sourceFolderPath, fileMask);
            this.GetFileList(sourceFolderPath, fileMask, startDateTime);
        }

        public void CopyFilesFromInputToSource(string inputFolderPath, string sourceFolderPath, string fileMask)
        {
            DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(inputFolderPath);

            if (ExcelDirectoryInfo.Exists)
            {
                foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                {
                    File.Copy(inputFolderPath + file.Name, sourceFolderPath + file.Name, true);
                }
            }
        }
        public void GetFileList(string path, string fileMask, DateTime startDateTime)
        {
            DateTime datetime = new DateTime(1900, 01, 01);
            int rowsAffected = 0;
            string datePart = string.Empty;
            int lastIndex = 0;
            int year = 0;
            int month = 0;
            int date = 0;
            int hour = 0;
            string filenameContains = string.Empty;
            try
            {
                DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(path);
                dicFileList.Clear();

                if (ExcelDirectoryInfo.Exists)
                {
                    foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                    {
                        filenameContains = fileMask.ToLower();
                        lastIndex = 0;
                        datePart = string.Empty;
                        year = 0;
                        month = 0;
                        date = 0;
                        hour = 0;
                        if (fileMask.Trim().Contains(charInFileMask) && !file.Name.Contains(charInHiddenFileName))
                        {
                            //Expected DateTime format yyyymmddhh
                            if (file.Name.Contains(charBetweenFileNameAndFileExtention))
                            {
                                lastIndex = file.Name.LastIndexOf(charBetweenFileNameAndFileExtention);
                                if (lastIndex > 0 && lastIndex < 9)
                                {
                                    //datePart = file.Name.Substring(lastIndex + 1, file.Name.Length - lastIndex - 1);
                                    datePart = file.Name.Substring(0, lastIndex).Trim(); //sB+ 1, file.Name.Length - lastIndex - 1);
                                    year = Convert.ToInt32(datePart.Substring(0, 4).Trim());
                                    month = Convert.ToInt32(datePart.Substring(4, 2).Trim());
                                    date = Convert.ToInt32(datePart.Substring(6, 2).Trim());

                                    if (datePart.Length > 8)
                                    {
                                        hour = Convert.ToInt32(datePart.Substring(8, 2).Trim());
                                    }

                                    datetime = new DateTime(year, month, date, hour, 0, 0);

                                    //IF DateTime Value in FileName is later then the StartDate stored for 
                                    //Last Suceessfully processed file only then pick the file for processing
                                    if (datetime > startDateTime)
                                    {
                                        dicFileList.Add(datetime, file.Name.Trim());
                                    }
                                }
                            }

                        }
                    }

                    var list = dicFileList.Keys.ToList<DateTime>();
                    list.Sort();

                    Dts.Variables["User::SourceFileList"].Value = dicFileList.Values.ToList<string>();
                    Dts.TaskResult = (int)ScriptResults.Success;

                }

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1ed4767484b04602b705956bcd95a826</msb:CodeName>
		<msb:DisplayName>ST_1ed4767484b04602b705956bcd95a826</msb:DisplayName>
		<msb:ProjectId>{365ED061-D472-4075-A446-3276E0E871C6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1ed4767484b04602b705956bcd95a826.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_1ed4767484b04602b705956bcd95a826.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{915AEAB9-9EBB-4E0F-808F-D959DA247713}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1ed4767484b04602b705956bcd95a826</RootNamespace>
    <AssemblyName>ST_1ed4767484b04602b705956bcd95a826</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1ed4767484b04602b705956bcd95a826")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1ed4767484b04602b705956bcd95a826")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ed4767484b04602b705956bcd95a826.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ed4767484b04602b705956bcd95a826.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1ed4767484b04602b705956bcd95a826.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1ed4767484b04602b705956bcd95a826.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1ed4767484b04602b705956bcd95a826.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1ed4767484b04602b705956bcd95a826.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEXv/FYAAAAAAAAAAOAAAiELAQsAABgAAAAGAAAAAAAAnjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEw2AABPAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
NgAAAAAAAEgAAAACAAUAsCQAAJwRAAABAAAAAAAAAPgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACjAAAAAgAAEX4WAAAKJgIoFwAACm8YAAAKcnMAAHBvGQAACm8a
AAAKbxsAAAoKAigXAAAKbxgAAApyuQAAcG8ZAAAKbxoAAApvGwAACgsCKBcAAApvGAAACnLnAABw
bxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKch8BAHBvGQAACm8aAAAKbxsAAApvHAAACigdAAAK
DQIGBwgoCQAABgIHCAkoCgAABioAEzADAEgAAAADAAARA3MeAAAKCgZvHwAACiw4BgVvIAAACgwW
DSsmCAmaCwMHbyEAAAooIgAACgQHbyEAAAooIgAAChcoIwAACgkXWA0JCI5pMtQqGzAGAOkBAAAE
AAAREgAgbAcAABcXKCQAAAp+FgAACgsWDBYNFhMEFhMFFhMGfhYAAAomA3MeAAAKEwcCewcAAARv
JQAAChEHbx8AAAo5kQEAABEHBG8gAAAKEwoWEws4JQEAABEKEQuaEwgEbyYAAAomFgx+FgAACgsW
DRYTBBYTBRYTBgRvHAAACnI/AQBwbycAAAo56QAAABEIbyEAAApyQwEAcG8nAAAKOtMAAAARCG8h
AAAKckcBAHBvJwAACjm9AAAAEQhvIQAACnJHAQBwbygAAAoMCBY+pAAAAAgfCTycAAAAEQhvIQAA
ChYIbykAAApvHAAACgsHFhpvKQAACm8cAAAKKCoAAAoNBxoYbykAAApvHAAACigqAAAKEwQHHBhv
KQAACm8cAAAKKCoAAAoTBQdvKwAACh4xFAceGG8pAAAKbxwAAAooKgAAChMGCREEEQURBhYWcywA
AAoKBgUoLQAACiwYAnsHAAAEBhEIbyEAAApvHAAACm8uAAAKEQsXWBMLEQsRCo5pP9D+//8CewcA
AARvLwAACigBAAArEwkRCW8xAAAKAigXAAAKbxgAAApySwEAcG8ZAAAKAnsHAAAEbzIAAAooAgAA
K28zAAAKAigXAAAKFm80AAAK3g8mAigXAAAKF280AAAK3gAqAAAAQRwAAAAAAAAnAAAAsgEAANkB
AAAPAAAAKwAAAXYCczUAAAp9BwAABAJzNQAACn0IAAAEAig2AAAKKgAAAAAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABMBQAAI34AALgFAAAICAAAI1N0
cmluZ3MAAAAAwA0AAHgBAAAjVVMAOA8AABAAAAAjR1VJRAAAAEgPAABUAgAAI0Jsb2IAAAAAAAAA
AgAAAVcdogkJCwAAAPolMwAWAAABAAAAKwAAAAUAAAALAAAACwAAAAcAAAA2AAAABQAAAA8AAAAE
AAAAAgAAAAMAAAAEAAAAAgAAAAEAAAAFAAAAAQAAAAEAAAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA
3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAfQJiAgYAigK6AAYAUgM4AwYAfQNrAwYAlANr
AwYAsQNrAwYA0ANrAwYA6QNrAwYAAgRrAwYAHQRrAwYAOARrAwYAUQRrAwYAigRqBAYAqgRqBAYA
2wTIBAYA+AS6AAYA/QS6AAYAIQVrAwoATQU3BQoAZgU3BQYAewVqBA4AnQUUAQYAvwW6AA4AzAUU
ARIAJQYFBhIAPQYFBgYAZwa6AAYAhAZ6BgYAkgZ6BgYArAZ6BgYAzgZ6Bh8AKwcAABYAWgdOBwYA
ZQdiAgYAbAdiAh8AhgcAAAYAuge6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8
AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAkADAARAH8BEwARAKwBFwARAPYBOQBWgBoC
RwBWgD4CRwBWgFMCRwABAJMCUwABAJ8CUwAGBt0CawBWgOUCbgBWgO0CbgBQIAAAAACDGLwBGwAB
AFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIA
syAAAAAAhhi8ARsAAgCnIAAAAACRGJYFrQACALwgAAAAAIYAsQIbAAIAbCEAAAAAhgC2AlwAAgDA
IQAAAACGANECYwAFANQjAAAAAIYYvAEbAAgAAAABAPUCAAABAPsCAAACAAsDAAADABwDAAABACUD
AAACABwDAAADACoDSQC8AXwAUQC8AXwAWQC8AXwAYQC8AXwAaQC8AXwAcQC8AXwAeQC8AXwAgQC8
AXwAiQC8AXwAkQC8AXwAmQC8AYEAoQC8ARsAqQC8ARsACQC8ARsAsQAPBYYAsQAqBY0AKQC8AZIA
yQC8AZ4A2QC8ARsAEQC8ARsA4QC8ARsA6QDGBUcAGQDeBbEA8QAvBrYA+QBGBrsAAQFPBsIACQBZ
BsYA6QBiBsYACQFvBsoAEQG8AXwAGQGhBtgAEQG1BtwAGQG+BsYA6QDHBuQAKQHTBuoAQQC8Af8A
DADYBhsA6QDeBsYA6QDmBg4B6QDvBhMB6QD7BhgBCQEFBx4B6QANByMBQQC8AScBQQAYBzEBDAAn
BzkBDAA5B0EBOQF6B00BFACBBxsADACWB2wBAQGhB3wB8QCrB4EADAC8ARsAGQC8ARsADgAQAEoA
DgAUAE0ADgAYAFAACAAoAHIACAAsAHcAKQCTAKQALgAbAA8CLgAjAA8CLgBjADUCLgALAJ4BLgAT
AOYBLgAzAOYBLgArAA8CLgA7ABUCLgBDAA8CLgBbACwCQwBrAHcASQCTAKQAYQCbAHcAgwCrAHcA
mQDQAPEAgQECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAH
AAYBZAEEgAAAAQAAAC4XIgsAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAA
AAABALoAAAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgDmBQAAAAAEAAAAAAAA
AAAAAAABAEIHAAAAAAAAAAABAAAAxAcAAAUABABhAF8BYQB4AQAAAAAAPE1vZHVsZT4AU1RfMWVk
NDc2NzQ4NGIwNDYwMmI3MDU5NTZiY2Q5NWE4MjYuZGxsAFJlc291cmNlcwBTVF8xZWQ0NzY3NDg0
YjA0NjAyYjcwNTk1NmJjZDk1YTgyNi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1Rf
MWVkNDc2NzQ4NGIwNDYwMmI3MDU5NTZiY2Q5NWE4MjYAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5S
ZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9u
AEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0
AERlZmF1bHQAY2hhckJldHdlZW5GaWxlTmFtZUFuZEZpbGVFeHRlbnRpb24AY2hhckluSGlkZGVu
RmlsZU5hbWUAY2hhckluRmlsZU1hc2sAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlv
bmFyeWAyAERhdGVUaW1lAGRpY0ZpbGVMaXN0AGRpY0ZpbGVMaXN0U29ydGVkAE1haW4AQ29weUZp
bGVzRnJvbUlucHV0VG9Tb3VyY2UAR2V0RmlsZUxpc3QAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUA
dmFsdWUAaW5wdXRGb2xkZXJQYXRoAHNvdXJjZUZvbGRlclBhdGgAZmlsZU1hc2sAcGF0aABzdGFy
dERhdGVUaW1lAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9B
c3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU3RyaW5nAEVtcHR5AFNjcmlwdE9iamVjdE1v
ZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0
ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFRyaW0AQ29udmVydABUb0RhdGVUaW1lAFN5c3RlbS5JTwBE
aXJlY3RvcnlJbmZvAEZpbGVTeXN0ZW1JbmZvAGdldF9FeGlzdHMARmlsZUluZm8AR2V0RmlsZXMA
Z2V0X05hbWUAQ29uY2F0AEZpbGUAQ29weQBDbGVhcgBUb0xvd2VyAENvbnRhaW5zAExhc3RJbmRl
eE9mAFN1YnN0cmluZwBUb0ludDMyAGdldF9MZW5ndGgAb3BfR3JlYXRlclRoYW4AQWRkAEtleUNv
bGxlY3Rpb24AZ2V0X0tleXMAU3lzdGVtLkNvcmUAU3lzdGVtLkxpbnEARW51bWVyYWJsZQBMaXN0
YDEASUVudW1lcmFibGVgMQBUb0xpc3QAU29ydABWYWx1ZUNvbGxlY3Rpb24AZ2V0X1ZhbHVlcwBz
ZXRfVmFsdWUAc2V0X1Rhc2tSZXN1bHQARXhjZXB0aW9uAFNUXzFlZDQ3Njc0ODRiMDQ2MDJiNzA1
OTU2YmNkOTVhODI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAxAGUA
ZAA0ADcANgA3ADQAOAA0AGIAMAA0ADYAMAAyAGIANwAwADUAOQA1ADYAYgBjAGQAOQA1AGEAOAAy
ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEVVAHMAZQByADoA
OgBJAG4AcAB1AHQARgBvAGwAZABlAHIAUABhAHQAaABfAFMAdABvAG4AZQBNAGkAbABpAG4AZQBy
AAAtVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAUABhAHQAaAAAN1UAcwBlAHIA
OgA6AEYAaQBsAGUATQBhAHMAawBfAFMAdABvAG4AZQBNAGkAbABpAG4AZQByAAAfVQBzAGUAcgA6
ADoAUwB0AGEAcgB0AEQAYQB0AGUAAAMqAAADfgAAAy4AAClVAHMAZQByADoAOgBTAG8AdQByAGMA
ZQBGAGkAbABlAEwAaQBzAHQAAAAAAEzkrne8/kxNtnDb5U79X2EACLd6XFYZNOCJCImEXc2AgMyR
AwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGDgIu
AAJ+AAIqAAgGFRIdAhEhDgYgAwEODg4HIAMBDg4RIQIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEB
CAYAARJZEV0EIAASYQYgAgEOEmEEBwESFQUgAQERaQgBAAIAAAAAAAMAAAEEIAASeQQgABJ9BiAB
EoCBHAMgABwDIAAOBQABESEOBwcEDg4OESEDIAACByABHRKAkQ4FAAIODg4GAAMBDg4CDQcEEoCJ
EoCRHRKAkQgGIAMBCAgIBxUSHQIRIQ4EIAECDgQgAQgOBSACDggIBAABCA4DIAAICSAGAQgICAgI
CAcAAgIRIREhByACARMAEwELIAAVEoCZAhMAEwEREAEBFRKAoQEeABUSgKUBHgAECgERIQcVEoCh
AREhCyAAFRKAqQITABMBAwoBDgQgAQEcHAcMESEOCAgICAgSgIkSgJEVEoChAREhHRKAkQhHAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQg
RnJhbWV3b3JrIDQoAQAjU1RfMWVkNDc2NzQ4NGIwNDYwMmI3MDU5NTZiY2Q5NWE4MjYAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAXQ2AAAAAAAAAAAAAI42AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACANgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABACILLhcAAAEAIgsuFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAx
AGUAZAA0ADcANgA3ADQAOAA0AGIAMAA0ADYAMAAyAGIANwAwADUAOQA1ADYAYgBjAGQAOQA1AGEA
OAAyADYAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADMANAAu
ADIAOAA1ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADEAZQBkADQA
NwA2ADcANAA4ADQAYgAwADQANgAwADIAYgA3ADAANQA5ADUANgBiAGMAZAA5ADUAYQA4ADIANgAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADEAZQBkADQANwA2ADcANAA4ADQAYgAwADQANgAwADIAYgA3ADAANQA5ADUA
NgBiAGMAZAA5ADUAYQA4ADIANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwAxAGUAZAA0ADcANgA3ADQAOAA0AGIAMAA0ADYAMAAyAGIANwAwADUAOQA1ADYA
YgBjAGQAOQA1AGEAOAAyADYAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADUAOQAzADQALgAyADgANQAwAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA5ADMANAAuADIAOAA1ADAAAAAAAAAAADAAAAwAAACgNgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get StartDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{573A2732-DB41-40FA-951E-9979ADBCB522}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get StartDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
          SQLTask:SqlStatementSource="Select Stg.fnGetStartDate('StoneMilinerStartDate') AS 'StartDate'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="StartDate"
            SQLTask:DtsVariableName="User::StartDate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update StartDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8409E8B1-2024-4F5E-B4C3-5D7D10153071}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update StartDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
          SQLTask:SqlStatementSource="exec stg.spUpdateStartDate ?,'StoneMilinerStartDate'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update TresaliaJobLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4BF01D1B-B35F-4808-8979-812EE63E6A5C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update TresaliaJobLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
          SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'StoneMilinerJobName','U'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageID"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{053B0D70-CF80-4442-85BD-58CC10F687B8}"
      DTS:From="Package\Get List of Files To Be Processed"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{082C1784-A11D-4FC9-8003-2AD0A1EB3CBF}"
      DTS:From="Package\Create TresaliaJobLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get StartDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F3181479-70FD-4A5C-8BFF-60C0BC795EFF}"
      DTS:From="Package\Get StartDate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Clear Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{F2072920-BCF4-4DDE-84BF-B78C3C9AA24F}"
      DTS:From="Package\Clear Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Get List of Files To Be Processed" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{64F982B2-4466-4F83-B126-C69AF4FC4D1A}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update TresaliaJobLog" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{801A9A1A-1C95-4ABC-A893-1C572E11F56F}"
      DTS:From="Package\Update TresaliaJobLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Update StartDate" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{3FB2C7BD-7F94-4EC9-9ED0-D6E86F9D5551}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{ECE9985E-1569-4DA3-89C5-F5C0659D4781}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Error HandellingTask"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7AE25107-E452-42D6-8C37-5C1D97E61CDC}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error HandellingTask">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4327647b6698468e9b5d36aa8774ad4a"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BCB2FD87-A94A-4E2D-9953-30FC21D29B86}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update TresaliaJobLog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{946778A3-9036-4800-AA67-74F16C567B81}"
              SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'StoneMilinerJobName','E'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageID"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Clear Staging Table"
          TopLeft="122,209.5" />
        <NodeLayout
          Size="183,42"
          Id="Package\Create TresaliaJobLog"
          TopLeft="116,5.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Foreach Loop Container\Archive"
          TopLeft="31.5,311.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Foreach Loop Container\Create FillHistory"
          TopLeft="197.5,5.5" />
        <NodeLayout
          Size="243,42"
          Id="Package\Foreach Loop Container\Loading Excel Sheet Data To Table"
          TopLeft="155.5,209.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Logging Error"
          TopLeft="205.5,311.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="211.5,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Update FileHistory"
          TopLeft="5.50000000000006,413.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="277,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="237.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.833333333333,60"
              Start="0,0"
              End="-149.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2354865085854" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2354865085854"
                    Point2="0,24.2354865085854"
                    Point3="-4,24.2354865085854" />
                  <mssgle:LineSegment
                    End="-145.833333333333,24.2354865085854" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.833333333333,24.2354865085854"
                    Point2="-149.833333333333,24.2354865085854"
                    Point3="-149.833333333333,28.2354865085854" />
                  <mssgle:LineSegment
                    End="-149.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="316.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.1666666666666,60"
              Start="0,0"
              End="-39.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2354865085855" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2354865085855"
                    Point2="0,24.2354865085855"
                    Point3="-4,24.2354865085855" />
                  <mssgle:LineSegment
                    End="-35.1666666666666,24.2354865085855" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.1666666666666,24.2354865085855"
                    Point2="-39.1666666666666,24.2354865085855"
                    Point3="-39.1666666666666,28.2354865085855" />
                  <mssgle:LineSegment
                    End="-39.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.8246809895833,29.2354865085855,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="88,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="277,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="404,510"
          Size="404,554"
          Id="Package\Foreach Loop Container"
          TopLeft="5.50000000000011,413.5" />
        <NodeLayout
          Size="232,42"
          Id="Package\Get List of Files To Be Processed"
          TopLeft="91.5000000000001,311.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get StartDate"
          TopLeft="136,107.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Update StartDate"
          TopLeft="127.5,1129.5" />
        <NodeLayout
          Size="186,42"
          Id="Package\Update TresaliaJobLog"
          TopLeft="114.5,1027.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="207.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="207.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="207.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="207.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="207.5,967.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="207.5,1069.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Error HandellingTask"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>