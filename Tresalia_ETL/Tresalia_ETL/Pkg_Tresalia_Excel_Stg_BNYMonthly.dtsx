<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/18/2016 4:54:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DELPMAITR46622"
  DTS:CreatorName="SAPIENT\pmaitr"
  DTS:Description="Net Assets SSIS Staging Package"
  DTS:DTSID="{B3134BD1-4DFE-4664-9FC4-747D1451348F}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_Tresalia_Excel_Stg_BNYMonthly"
  DTS:PackageType="5"
  DTS:VersionBuild="196"
  DTS:VersionGUID="{53D37A47-F2DC-4A87-B3A2-5FA96CEAEC10}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConnectionManager_Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CFC91A7F-278F-4194-9E36-00551254E84D}"
      DTS:ObjectName="ConnectionManager_Stage">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnectionMgr_Stage]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{10540979-4625-45DE-9538-08763FC8FCC7}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::SourceFolderPath] + @[User::SourceFileName_BNYMonthly]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\Tresalia\Anupam\Tresalia_ETL\Source\Modified Statement of Change in Net Assets_20160312_003049439.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="D:\Tresalia\Anupam\Tresalia_ETL\Config\Tresalia_ConnectionStrings.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{A9F57903-5C4C-442D-B7CF-61817C135166}"
      DTS:ObjectName="Configuration 1" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA1C4D1B-1C2D-48F4-B412-0E5971F58829}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA421B5F-A41B-4E61-8F9C-7D6BAA3FDD6E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BatchDate">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EEFA371B-2D29-479E-9F1C-1EAC46B411A5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionMgr_Stage">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=TRES-DEV;Initial Catalog=Tresalia;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7D03124-05E2-49CE-BACA-04B3D6CAAA5C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMask_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">Modified Statement of Change in Net Assets_*.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{90ACC4D3-36FC-47C8-A607-1527A1F8847E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::SourceFolderPath] + &quot;\\&quot; + @[User::SourceFileName_BNYMonthly]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFilePathSource">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Source\\Modified Statement of Change in Net Assets_20160312_003049439.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19F71550-58BD-4175-9B53-235C715C64E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolderPath_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Input\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F739E85-7A72-4258-99C4-617589E16845}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStatus">
      <DTS:VariableValue
        DTS:DataType="8">SUCCESS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30BC2F11-C201-4650-B72E-86EA77B18C37}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Select * from [&quot; +  @[User::TabName_BNYMonthly] +  @[User::SelectedColumnRange_BNYMonthly] + &quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Query_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">Select * from [Modified Statement of Change in$A:Z]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E6214B3-667F-4B94-B7EB-8B202A3D9AC5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SelectedColumnRange_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">A:Z</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1BCF0BB7-1362-4FDF-9900-42A2CB204D10}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileDateTime">
      <DTS:VariableValue
        DTS:DataType="7">12:00:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B425142A-EBED-48C2-813A-037A470354E9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD95ECD0-F586-473E-9069-086F379B7D4E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFileName_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">Modified Statement of Change in Net Assets_20160312_003049439.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D41EBF25-EBB9-4A80-9103-12981E8919E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\Tresalia\Anupam\Tresalia_ETL\Source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC6AF852-7376-4631-A6D2-2916B09941EC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="StartDate">
      <DTS:VariableValue
        DTS:DataType="7">3/31/2015 12:25:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8548E04B-6836-45EF-8650-63F87805FCD4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TabName_BNYMonthly">
      <DTS:VariableValue
        DTS:DataType="8">Modified Statement of Change in$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2E280BE-98A9-4EF8-AFEE-C3153E2CD74F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TotalRecordsInFile">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Staging Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2CB9FD55-36BD-48F3-96D2-EA0EBF1F7615}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Staging Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
          SQLTask:SqlStatementSource="exec stg.spClearStageTable 'BNYMonthly'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create TresaliaJobLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{74D5F937-479A-4B9F-BC0C-6AE3424E8B97}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create TresaliaJobLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
          SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'BNYMonthlyJobName','S'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageID"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{71ECC2E5-CB99-44D9-9C61-41BF27FBB4F6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFromVarEnumerator"
        DTS:DTSID="{074C7E99-629B-43E9-8C6A-27D420511D83}"
        DTS:ObjectName="{074C7E99-629B-43E9-8C6A-27D420511D83}">
        <DTS:ObjectData>
          <FEEFVE
            VariableName="User::SourceFileList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archive File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Archive files"
          DTS:DTSID="{951F41A8-BD43-4D04-8DFF-F0B7BEBDD4F2}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016 RC0; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="MoveFile"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::FullFilePathSource"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::ArchiveFolderPath"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create FileHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6701DF31-FB53-48AF-BE9B-EE59184ECDB0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FileHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
              SQLTask:SqlStatementSource="exec stg.spCreateFileHistory ?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFileName"
                SQLTask:DtsVariableName="User::SourceFileName_BNYMonthly"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_BNYMonthly"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TotalRecordsInFile"
                SQLTask:DtsVariableName="User::TotalRecordsInFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{615C69C1-0BE1-4AA8-AEC1-2764CB761153}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load BNYMonthly Into Staging"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{5BDBF2AD-C76A-464F-9D2F-38262F01BBF3}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{9B93AA04-6CC6-4236-8438-A676643CF531}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="FileName"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Filepath]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Filepath"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[Filepath]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[TabName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="TabName"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[TabName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[BatchDate]"
                          cachedDataType="date"
                          cachedName="BatchDate"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Calculation 2]"
                          cachedDataType="r8"
                          cachedName="Calculation 2"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Calculation 1]"
                          cachedDataType="r8"
                          cachedName="Calculation 1"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Acctg Status Update Time (EST)]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Acctg Status Update Time (EST)"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Time (EST)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Acctg Status Update Date]"
                          cachedDataType="date"
                          cachedName="Acctg Status Update Date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Status"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Unrealized Gain/Loss]"
                          cachedDataType="r8"
                          cachedName="Unrealized Gain/Loss"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Unrealized Gain/Loss]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Realized Gain/Loss]"
                          cachedDataType="r8"
                          cachedName="Realized Gain/Loss"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Realized Gain/Loss]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Other Income]"
                          cachedDataType="r8"
                          cachedName="Other Income"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Other Income]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Dividend/Interest Income]"
                          cachedDataType="r8"
                          cachedName="Dividend/Interest Income"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Dividend/Interest Income]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Transfers Out]"
                          cachedDataType="r8"
                          cachedName="Transfers Out"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers Out]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Transfers In]"
                          cachedDataType="r8"
                          cachedName="Transfers In"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers In]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Direct Expense]"
                          cachedDataType="r8"
                          cachedName="Direct Expense"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Direct Expense]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Benefit Payments]"
                          cachedDataType="r8"
                          cachedName="Benefit Payments"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Benefit Payments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Distributed to Plan]"
                          cachedDataType="r8"
                          cachedName="Distributed to Plan"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Distributed to Plan]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Received from Plan]"
                          cachedDataType="r8"
                          cachedName="Received from Plan"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Received from Plan]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Contributions]"
                          cachedDataType="r8"
                          cachedName="Contributions"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Contributions]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Closing Balance]"
                          cachedDataType="r8"
                          cachedName="Closing Balance"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Closing Balance]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Opening Balance]"
                          cachedDataType="r8"
                          cachedName="Opening Balance"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Opening Balance]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Base Currency]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Base Currency"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Base Currency]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Report ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Report ID"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Report ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                          cachedDataType="date"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Begin Date]"
                          cachedDataType="date"
                          cachedName="Begin Date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Begin Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Source Account Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Source Account Name"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Source Account Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Source Account Number"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Number]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Reporting Account Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Reporting Account Name"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Reporting Account Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Reporting Account Number"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Number]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FileName]"
                          name="Copy of FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Filepath]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Filepath]"
                          name="Copy of Filepath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[Filepath]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TabName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TabName]"
                          name="Copy of TabName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[TabName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of BatchDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of BatchDate]"
                          name="Copy of BatchDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 2]"
                          name="Copy of Calculation 2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 1]"
                          name="Copy of Calculation 1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Time (EST)]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Time (EST)]"
                          name="Copy of Acctg Status Update Time (EST)"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Time (EST)]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Date]"
                          name="Copy of Acctg Status Update Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Status]"
                          name="Copy of Status"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Unrealized Gain/Loss]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Unrealized Gain/Loss]"
                          name="Copy of Unrealized Gain/Loss"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Unrealized Gain/Loss]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Realized Gain/Loss]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Realized Gain/Loss]"
                          name="Copy of Realized Gain/Loss"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Realized Gain/Loss]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Other Income]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Other Income]"
                          name="Copy of Other Income"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Other Income]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Dividend/Interest Income]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Dividend/Interest Income]"
                          name="Copy of Dividend/Interest Income"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Dividend/Interest Income]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers Out]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers Out]"
                          name="Copy of Transfers Out"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers Out]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers In]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers In]"
                          name="Copy of Transfers In"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers In]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Direct Expense]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Direct Expense]"
                          name="Copy of Direct Expense"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Direct Expense]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Benefit Payments]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Benefit Payments]"
                          name="Copy of Benefit Payments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Benefit Payments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Distributed to Plan]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Distributed to Plan]"
                          name="Copy of Distributed to Plan"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Distributed to Plan]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Received from Plan]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Received from Plan]"
                          name="Copy of Received from Plan"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Received from Plan]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Contributions]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Contributions]"
                          name="Copy of Contributions"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Contributions]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Closing Balance]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Closing Balance]"
                          name="Copy of Closing Balance"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Closing Balance]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Opening Balance]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Opening Balance]"
                          name="Copy of Opening Balance"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Opening Balance]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Base Currency]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Base Currency]"
                          name="Copy of Base Currency"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Base Currency]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Report ID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Report ID]"
                          name="Copy of Report ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Report ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          name="Copy of End Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Begin Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Begin Date]"
                          name="Copy of Begin Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Begin Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Name]"
                          name="Copy of Source Account Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Number]"
                          name="Copy of Source Account Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Number]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Name]"
                          name="Copy of Reporting Account Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Number]"
                          name="Copy of Reporting Account Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Number]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[FileName]"
                          name="FileName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFileName_BNYMonthly]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFileName_BNYMonthly]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[Filepath]"
                          name="Filepath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::SourceFolderPath]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[TabName]"
                          name="TabName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,100,1252)@[User::TabName_BNYMonthly]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,100,1252)@[User::TabName_BNYMonthly]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output].Columns[BatchDate]"
                          name="BatchDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::BatchDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::BatchDate]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Modified Statement of Change in$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::TabName_BNYMonthly</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::Query_BNYMonthly</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">1</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Reporting Account Number]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Number]"
                          name="Reporting Account Number"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Reporting Account Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Reporting Account Name]"
                          name="Reporting Account Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Source Account Number]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Number]"
                          name="Source Account Number"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Source Account Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Source Account Name]"
                          name="Source Account Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Begin Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Begin Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Begin Date]"
                          name="Begin Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Report ID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Report ID]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Report ID]"
                          name="Report ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Base Currency]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Currency]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Base Currency]"
                          name="Base Currency"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Opening Balance]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Opening Balance]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Opening Balance]"
                          name="Opening Balance"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Closing Balance]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Closing Balance]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Closing Balance]"
                          name="Closing Balance"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Contributions]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Contributions]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Contributions]"
                          name="Contributions"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Received from Plan]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Received from Plan]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Received from Plan]"
                          name="Received from Plan"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Distributed to Plan]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Distributed to Plan]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Distributed to Plan]"
                          name="Distributed to Plan"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Benefit Payments]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Benefit Payments]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Benefit Payments]"
                          name="Benefit Payments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Direct Expense]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Direct Expense]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Direct Expense]"
                          name="Direct Expense"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers In]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Transfers In]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers In]"
                          name="Transfers In"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers Out]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Transfers Out]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Transfers Out]"
                          name="Transfers Out"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Dividend/Interest Income]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Dividend/Interest Income]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Dividend/Interest Income]"
                          name="Dividend/Interest Income"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Other Income]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Other Income]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Other Income]"
                          name="Other Income"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Realized Gain/Loss]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Realized Gain/Loss]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Realized Gain/Loss]"
                          name="Realized Gain/Loss"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Unrealized Gain/Loss]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unrealized Gain/Loss]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Unrealized Gain/Loss]"
                          name="Unrealized Gain/Loss"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Status]"
                          name="Status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acctg Status Update Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Date]"
                          name="Acctg Status Update Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Time (EST)]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acctg Status Update Time (EST)]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Acctg Status Update Time (EST)]"
                          name="Acctg Status Update Time (EST)"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 1]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Calculation 1]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 1]"
                          name="Calculation 1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 2]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Calculation 2]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].Columns[Calculation 2]"
                          name="Calculation 2"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Reporting Account Number]"
                          dataType="wstr"
                          length="255"
                          name="Reporting Account Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Reporting Account Name]"
                          dataType="wstr"
                          length="255"
                          name="Reporting Account Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Source Account Number]"
                          dataType="wstr"
                          length="255"
                          name="Source Account Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Source Account Name]"
                          dataType="wstr"
                          length="255"
                          name="Source Account Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Begin Date]"
                          dataType="date"
                          name="Begin Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="date"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Report ID]"
                          dataType="wstr"
                          length="255"
                          name="Report ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Base Currency]"
                          dataType="wstr"
                          length="255"
                          name="Base Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Opening Balance]"
                          dataType="r8"
                          name="Opening Balance" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Closing Balance]"
                          dataType="r8"
                          name="Closing Balance" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Contributions]"
                          dataType="r8"
                          name="Contributions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Received from Plan]"
                          dataType="r8"
                          name="Received from Plan" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Distributed to Plan]"
                          dataType="r8"
                          name="Distributed to Plan" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Benefit Payments]"
                          dataType="r8"
                          name="Benefit Payments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Direct Expense]"
                          dataType="r8"
                          name="Direct Expense" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Transfers In]"
                          dataType="r8"
                          name="Transfers In" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Transfers Out]"
                          dataType="r8"
                          name="Transfers Out" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Dividend/Interest Income]"
                          dataType="r8"
                          name="Dividend/Interest Income" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Other Income]"
                          dataType="r8"
                          name="Other Income" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Realized Gain/Loss]"
                          dataType="r8"
                          name="Realized Gain/Loss" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unrealized Gain/Loss]"
                          dataType="r8"
                          name="Unrealized Gain/Loss" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Status]"
                          dataType="wstr"
                          length="255"
                          name="Status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acctg Status Update Date]"
                          dataType="date"
                          name="Acctg Status Update Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Acctg Status Update Time (EST)]"
                          dataType="wstr"
                          length="255"
                          name="Acctg Status Update Time (EST)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Calculation 1]"
                          dataType="r8"
                          name="Calculation 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output].ExternalColumns[Calculation 2]"
                          dataType="r8"
                          name="Calculation 2" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Reporting Account Number]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Reporting Account Number]"
                          name="Reporting Account Number" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Reporting Account Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Reporting Account Name]"
                          name="Reporting Account Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Source Account Number]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Source Account Number]"
                          name="Source Account Number" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Source Account Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Source Account Name]"
                          name="Source Account Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Begin Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Begin Date]"
                          name="Begin Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Report ID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Report ID]"
                          name="Report ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Base Currency]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Base Currency]"
                          name="Base Currency" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Opening Balance]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Opening Balance]"
                          name="Opening Balance" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Closing Balance]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Closing Balance]"
                          name="Closing Balance" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Contributions]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Contributions]"
                          name="Contributions" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Received from Plan]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Received from Plan]"
                          name="Received from Plan" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Distributed to Plan]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Distributed to Plan]"
                          name="Distributed to Plan" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Benefit Payments]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Benefit Payments]"
                          name="Benefit Payments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Direct Expense]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Direct Expense]"
                          name="Direct Expense" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Transfers In]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Transfers In]"
                          name="Transfers In" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Transfers Out]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Transfers Out]"
                          name="Transfers Out" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Dividend/Interest Income]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Dividend/Interest Income]"
                          name="Dividend/Interest Income" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Other Income]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Other Income]"
                          name="Other Income" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Realized Gain/Loss]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Realized Gain/Loss]"
                          name="Realized Gain/Loss" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Unrealized Gain/Loss]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Unrealized Gain/Loss]"
                          name="Unrealized Gain/Loss" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Acctg Status Update Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Acctg Status Update Date]"
                          name="Acctg Status Update Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Acctg Status Update Time (EST)]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Acctg Status Update Time (EST)]"
                          name="Acctg Status Update Time (EST)" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Calculation 1]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Calculation 1]"
                          name="Calculation 1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Calculation 2]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[Calculation 2]"
                          name="Calculation 2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stg].[BNYMonthly]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[ConnectionManager_Stage]"
                      connectionManagerRefId="Package.ConnectionManagers[ConnectionManager_Stage]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of TabName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of TabName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TabName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Filepath]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Filepath"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Filepath]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of FileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of FileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of BatchDate]"
                          cachedDataType="date"
                          cachedName="Copy of BatchDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of BatchDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Reporting Account Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Reporting Account Number"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reporting Account Number]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Number]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Reporting Account Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Reporting Account Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reporting Account Name]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Reporting Account Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Source Account Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Source Account Number"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Account Number]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Number]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Source Account Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Source Account Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Account Name]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Source Account Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Begin Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Begin Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Begin Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Begin Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[End Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Report ID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Report ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Report ID]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Report ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Base Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Base Currency"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Base Currency]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Base Currency]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Opening Balance]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Opening Balance"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Opening Balance]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Opening Balance]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Closing Balance]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Closing Balance"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Closing Balance]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Closing Balance]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Contributions]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Contributions"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Contributions]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Contributions]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Received from Plan]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Received from Plan"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Received from Plan]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Received from Plan]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Distributed to Plan]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Distributed to Plan"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributed to Plan]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Distributed to Plan]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Benefit Payments]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Benefit Payments"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Benefit Payments]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Benefit Payments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Direct Expense]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Direct Expense"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Direct Expense]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Direct Expense]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Transfers In]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Transfers In"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Transfers In]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers In]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Transfers Out]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Transfers Out"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Transfers Out]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Transfers Out]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Dividend/Interest Income]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Dividend/Interest Income"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dividend/Interest Income]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Dividend/Interest Income]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Other Income]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Other Income"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Other Income]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Other Income]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Realized Gain/Loss]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Realized Gain/Loss"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Realized Gain/Loss]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Realized Gain/Loss]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Unrealized Gain/Loss]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Unrealized Gain/Loss"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Unrealized Gain/Loss]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Unrealized Gain/Loss]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Status"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Status]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Acctg Status Update Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Acctg Status Update Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Acctg Status Update Date]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Acctg Status Update Time (EST)]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Acctg Status Update Time (EST)"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Acctg Status Update Time (EST)]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Acctg Status Update Time (EST)]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Calculation 1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Calculation 1"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Calculation 1]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Calculation 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Copy of Calculation 2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Calculation 2]"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Calculation 2]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="FilePath" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TabName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="TabName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedDate]"
                          dataType="dbTimeStamp"
                          name="CreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedBy]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="CreatedBy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BatchDate]"
                          dataType="dbDate"
                          name="BatchDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reporting Account Number]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Reporting Account Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reporting Account Name]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Reporting Account Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Account Number]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Source Account Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Account Name]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Source Account Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Begin Date]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Begin Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[End Date]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Report ID]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Report ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Base Currency]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Base Currency" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Opening Balance]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Opening Balance" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Closing Balance]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Closing Balance" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Contributions]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Contributions" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Received from Plan]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Received from Plan" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Distributed to Plan]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Distributed to Plan" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Benefit Payments]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Benefit Payments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Direct Expense]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Direct Expense" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Transfers In]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Transfers In" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Transfers Out]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Transfers Out" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dividend/Interest Income]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Dividend/Interest Income" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Other Income]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Other Income" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Realized Gain/Loss]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Realized Gain/Loss" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Unrealized Gain/Loss]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Unrealized Gain/Loss" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Acctg Status Update Date]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Acctg Status Update Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Acctg Status Update Time (EST)]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Acctg Status Update Time (EST)" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Calculation 1]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Calculation 1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Calculation 2]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Calculation 2" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::TotalRecordsInFile</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count.Inputs[Row Count Input 1]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Logging Error"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{478F4607-C97D-418E-883E-B2B9F769804F}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logging Error"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_136a7fb5545a4813b058c73abb6acf43"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update FileHistory"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{977F8D89-05F7-4DE1-83E0-DCAC0B5DD519}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update FileHistory"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
              SQLTask:SqlStatementSource="exec stg.spUpdateFileHistory ?,?,?,?,?,?,'BNYMonthly'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFilePath"
                SQLTask:DtsVariableName="User::ArchiveFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ArchivedFileName"
                SQLTask:DtsVariableName="User::SourceFileName_BNYMonthly"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ProcessingStatus"
                SQLTask:DtsVariableName="User::ProcessingStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SourceFilePath"
                SQLTask:DtsVariableName="User::SourceFolderPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TabName"
                SQLTask:DtsVariableName="User::TabName_BNYMonthly"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@TotalRecordsInFile"
                SQLTask:DtsVariableName="User::TotalRecordsInFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7BF6B037-6248-4324-B802-3834B613C57B}"
          DTS:From="Package\Foreach Loop Container\Load BNYMonthly Into Staging"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Archive File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{394B9106-D996-4FFB-B224-778ED775A63E}"
          DTS:From="Package\Foreach Loop Container\Create FileHistory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Load BNYMonthly Into Staging" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F9846E02-8C00-44F6-ABAA-38F53496FCE0}"
          DTS:From="Package\Foreach Loop Container\Load BNYMonthly Into Staging"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Logging Error"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{920F3958-3493-4A92-9B8F-109719968398}"
          DTS:From="Package\Foreach Loop Container\Archive File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Update FileHistory" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{828DA570-EC47-479B-A9B9-1BA7B301B472}"
          DTS:ObjectName="{828DA570-EC47-479B-A9B9-1BA7B301B472}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::SourceFileName_BNYMonthly" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get StartDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1C337A0A-96EC-4F67-BEC7-776C519A974A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get StartDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
          SQLTask:SqlStatementSource="Select Stg.fnGetStartDate('BNYMonthlyStartDate') AS 'StartDate'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="StartDate"
            SQLTask:DtsVariableName="User::StartDate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E28D424C-F7CB-4A56-A0B7-EA3D4CF11967}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_fba52079caa440e49598f120a00a7802"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FileMask_BNYMonthly,User::InputFolderPath_BNYMonthly,User::SourceFolderPath,User::StartDate"
          ReadWriteVariables="User::SourceFileList">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fba52079caa440e49598f120a00a7802.Properties.Settings.get_Default():ST_fba52079caa440e49598f120a00a7802.Properties.Sett" +
    "ings")]

namespace ST_fba52079caa440e49598f120a00a7802.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_fba52079caa440e49598f120a00a7802
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        Dictionary<DateTime, string> dicFileList = new Dictionary<DateTime, string>();
        Dictionary<DateTime, string> dicFileListSorted = new Dictionary<DateTime, string>();
        public const string charBetweenFileNameAndFileDate = "_";
        public const string charInHiddenFileName = "~";
        public const string charInFileMask = "*";

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string fileName = string.Empty;
            string inputFolderPath = Dts.Variables["User::InputFolderPath_BNYMonthly"].Value.ToString();
            string sourceFolderPath = Dts.Variables["User::SourceFolderPath"].Value.ToString();
            string fileMask = Dts.Variables["User::FileMask_BNYMonthly"].Value.ToString();
            DateTime startDateTime = Convert.ToDateTime(Dts.Variables["User::StartDate"].Value.ToString().Trim());

            this.CopyFilesFromInputToSource(inputFolderPath, sourceFolderPath, fileMask);
            this.GetFileList(sourceFolderPath, fileMask, startDateTime);
        }

        public void CopyFilesFromInputToSource(string inputFolderPath, string sourceFolderPath, string fileMask)
        {
            DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(inputFolderPath);

            if (ExcelDirectoryInfo.Exists)
            {
                foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                {
                    File.Copy(inputFolderPath + file.Name, sourceFolderPath + file.Name, true);
                }
            }
        }
        public void GetFileList(string path, string fileMask, DateTime startDateTime)
        {
            DateTime datetime = new DateTime(1900, 01, 01);
            string datePart = string.Empty;
            int lastIndex = 0;
            int year = 0;
            int month = 0;
            int date = 0;
            int hour = 0;
            string filenameContains = string.Empty;
            try
            {
                DirectoryInfo ExcelDirectoryInfo = new DirectoryInfo(path);
                dicFileList.Clear();

                if (ExcelDirectoryInfo.Exists)
                {
                    foreach (var file in ExcelDirectoryInfo.GetFiles(fileMask))
                    {
                        int firstIndex = 0;
                        filenameContains = fileMask.ToLower();
                        lastIndex = 0;
                        datePart = string.Empty;
                        year = 0;
                        month = 0;
                        date = 0;
                        hour = 0;
                        if (fileMask.Trim().Contains(charInFileMask) && !file.Name.Contains(charInHiddenFileName))
                        {
                            //Expected DateTime format yyyymmddhh
                            if (file.Name.Contains(charBetweenFileNameAndFileDate))
                            {
                                firstIndex = file.Name.IndexOf(charBetweenFileNameAndFileDate);
                                lastIndex = file.Name.LastIndexOf(charBetweenFileNameAndFileDate);
                                if (lastIndex > 0)
                                {

                                    //datePart = file.Name.Substring(lastIndex + 1, file.Name.Length - lastIndex - 1);
                                    datePart = file.Name.Substring(firstIndex + 1, 8).Trim(); //sB+ 1, file.Name.Length - lastIndex - 1);
                                    year = Convert.ToInt32(datePart.Substring(0, 4).Trim());
                                    month = Convert.ToInt32(datePart.Substring(4, 2).Trim());
                                    date = Convert.ToInt32(datePart.Substring(6, 2).Trim());

                                    if (datePart.Length > 8)
                                    {
                                        hour = Convert.ToInt32(datePart.Substring(8, 2).Trim());
                                    }

                                    datetime = new DateTime(year, month, date, hour, 0, 0);
                                }
                            }
                            //IF DateTime Value in FileName is later then the StartDate stored for 
                            //Last Suceessfully processed file only then pick the file for processing
                            if (datetime > startDateTime)
                            {
                                dicFileList.Add(datetime, file.Name.Trim());
                            }
                        }
                        else
                        {
                            dicFileList.Add(datetime, file.Name.Trim());
                        }
                    }

                    var list = dicFileList.Keys.ToList<DateTime>();
                    list.Sort();

                    Dts.Variables["User::SourceFileList"].Value = dicFileList.Values.ToList<string>();
                    Dts.TaskResult = (int)ScriptResults.Success;

                }

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_fba52079caa440e49598f120a00a7802</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_fba52079caa440e49598f120a00a7802</msb:DisplayName>
		<msb:ProjectId>{25A0C6C7-F9FD-496B-824B-42D6688A2D02}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_fba52079caa440e49598f120a00a7802.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="177013e9ad3649a2a1c9c3d9f00191fd">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>1</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>100</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fba52079caa440e49598f120a00a7802")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fba52079caa440e49598f120a00a7802")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_fba52079caa440e49598f120a00a7802.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c8d26557-9a3c-4008-8078-a4fb1ff11383}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fba52079caa440e49598f120a00a7802</RootNamespace>
    <AssemblyName>ST_fba52079caa440e49598f120a00a7802</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fba52079caa440e49598f120a00a7802.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fba52079caa440e49598f120a00a7802.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fba52079caa440e49598f120a00a7802.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fba52079caa440e49598f120a00a7802.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fba52079caa440e49598f120a00a7802.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_fba52079caa440e49598f120a00a7802.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIn0/FYAAAAAAAAAAOAAAiELAQsAABgAAAAGAAAAAAAAzjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg2AABTAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAAEAAAAQAAAAAQAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NgAAAAAAAEgAAAACAAUA2CQAAKARAAABAAAAAAAAACAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACjAAAAAgAAEX4WAAAKJgIoFwAACm8YAAAKcnMAAHBvGQAACm8a
AAAKbxsAAAoKAigXAAAKbxgAAApytQAAcG8ZAAAKbxoAAApvGwAACgsCKBcAAApvGAAACnLjAABw
bxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKchcBAHBvGQAACm8aAAAKbxsAAApvHAAACigdAAAK
DQIGBwgoCQAABgIHCAkoCgAABioAEzADAEgAAAADAAARA3MeAAAKCgZvHwAACiw4BgVvIAAACgwW
DSsmCAmaCwMHbyEAAAooIgAACgQHbyEAAAooIgAAChcoIwAACgkXWA0JCI5pMtQqGzAGABECAAAE
AAAREgAgbAcAABcXKCQAAAp+FgAACgsWDBYNFhMEFhMFFhMGfhYAAAomA3MeAAAKEwcCewcAAARv
JQAAChEHbx8AAAo5uQEAABEHBG8gAAAKEwsWEww4TQEAABELEQyaEwgWEwkEbyYAAAomFgx+FgAA
CgsWDRYTBBYTBRYTBgRvHAAACnI3AQBwbycAAAo59gAAABEIbyEAAApyOwEAcG8nAAAKOuAAAAAR
CG8hAAAKcj8BAHBvJwAACjmnAAAAEQhvIQAACnI/AQBwbygAAAoTCREIbyEAAApyPwEAcG8pAAAK
DAgWMX4RCG8hAAAKEQkXWB5vKgAACm8cAAAKCwcWGm8qAAAKbxwAAAooKwAACg0HGhhvKgAACm8c
AAAKKCsAAAoTBAccGG8qAAAKbxwAAAooKwAAChMFB28sAAAKHjEUBx4YbyoAAApvHAAACigrAAAK
EwYJEQQRBREGFhZzLQAACgoGBSguAAAKLDICewcAAAQGEQhvIQAACm8cAAAKby8AAAorGAJ7BwAA
BAYRCG8hAAAKbxwAAApvLwAAChEMF1gTDBEMEQuOaT+o/v//AnsHAAAEbzAAAAooAQAAKxMKEQpv
MgAACgIoFwAACm8YAAAKckMBAHBvGQAACgJ7BwAABG8zAAAKKAIAACtvNAAACgIoFwAAChZvNQAA
Ct4PJgIoFwAAChdvNQAACt4AKgAAAEEcAAAAAAAAJwAAANoBAAABAgAADwAAACsAAAF2AnM2AAAK
fQcAAAQCczYAAAp9CAAABAIoNwAACioAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAAUAUAACN+AAC8BQAADAgAACNTdHJpbmdzAAAAAMgNAABwAQAA
I1VTADgPAAAQAAAAI0dVSUQAAABIDwAAWAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6JTMA
FgAAAQAAACsAAAAFAAAACwAAAAsAAAAHAAAANwAAAAUAAAAPAAAABAAAAAIAAAADAAAABAAAAAIA
AAABAAAABQAAAAEAAAABAAAAAgAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAG
AG8BXgEGAKABiwEGAHgCXQIGAIUCugAGAE0DMwMGAHgDZgMGAI8DZgMGAKwDZgMGAMsDZgMGAOQD
ZgMGAP0DZgMGABgEZgMGADMEZgMGAEwEZgMGAIUEZQQGAKUEZQQGANYEwwQGAPMEugAGAPgEugAG
ABwFZgMKAEgFMgUKAGEFMgUGAHYFZQQOAJgFFAEGALoFugAOAMcFFAESACAGAAYSADgGAAYGAGIG
ugAGAH8GdQYGAI0GdQYGAKcGdQYGAMkGdQYfAC4HAAAWAF0HUQcGAGgHXQIGAG8HXQIfAIkHAAAG
AL0HugAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0A
BAAIAAMBAACjAAAAEQAJAAwAEQB/ARMAEQCsARcAEQD2ATkAVoAaAkcAVoA5AkcAVoBOAkcAAQCO
AlMAAQCaAlMABgbYAmsAVoDgAm4AVoDoAm4AUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEg
AAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAA
AAAAkRiRBa0AAgC8IAAAAACGAKwCGwACAGwhAAAAAIYAsQJcAAIAwCEAAAAAhgDMAmMABQD8IwAA
AACGGLwBGwAIAAAAAQDwAgAAAQD2AgAAAgAGAwAAAwAXAwAAAQAgAwAAAgAXAwAAAwAlA0kAvAF8
AFEAvAF8AFkAvAF8AGEAvAF8AGkAvAF8AHEAvAF8AHkAvAF8AIEAvAF8AIkAvAF8AJEAvAF8AJkA
vAGBAKEAvAEbAKkAvAEbAAkAvAEbALEACgWGALEAJQWNACkAvAGSAMkAvAGeANkAvAEbABEAvAEb
AOEAvAEbAOkAwQVHABkA2QWxAPEAKga2APkAQQa7AAEBSgbCAAkAVAbGAOkAXQbGAAkBagbKABEB
vAF8ABkBnAbYABEBsAbcABkBuQbGAOkAwgbkACkBzgbqAEEAvAH/AAwA0wYbAOkA2QbGAOkA4QYO
AekA6gYTAekA8gYTAekA/gYYAQkBCAceAekAEAcjAUEAvAEnAUEAGwcxAQwAKgc5AQwAPAdBATkB
fQdNARQAhAcbAAwAmQdsAQEBpAd8AfEArgeBAAwAvAEbABkAvAEbAA4AEABKAA4AFABNAA4AGABQ
AAgAKAByAAgALAB3ACkAkwCkAC4AGwAQAi4AIwAQAi4AYwA2Ai4ACwCfAS4AEwDnAS4AMwDnAS4A
KwAQAi4AOwAWAi4AQwAQAi4AWwAtAkMAawB3AEkAkwCkAGEAmwB3AIMAqwB3AJkA0ADxAIEBAgAB
AAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAGAWQBBIAAAAEA
AAAuF8QNAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAM
AAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoA4QUAAAAABAAAAAAAAAAAAAAAAQBFBwAA
AAAAAAAAAQAAAMcHAAAFAAQAYwBfAWMAeAEAAAA8TW9kdWxlPgBTVF9mYmE1MjA3OWNhYTQ0MGU0
OTU5OGYxMjBhMDBhNzgwMi5kbGwAUmVzb3VyY2VzAFNUX2ZiYTUyMDc5Y2FhNDQwZTQ5NTk4ZjEy
MGEwMGE3ODAyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9mYmE1MjA3OWNhYTQ0
MGU0OTU5OGYxMjBhMDBhNzgwMgBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QA
U3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNv
dXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8A
cmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABjaGFy
QmV0d2VlbkZpbGVOYW1lQW5kRmlsZURhdGUAY2hhckluSGlkZGVuRmlsZU5hbWUAY2hhckluRmls
ZU1hc2sAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyAERhdGVUaW1lAGRp
Y0ZpbGVMaXN0AGRpY0ZpbGVMaXN0U29ydGVkAE1haW4AQ29weUZpbGVzRnJvbUlucHV0VG9Tb3Vy
Y2UAR2V0RmlsZUxpc3QAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAaW5wdXRGb2xkZXJQ
YXRoAHNvdXJjZUZvbGRlclBhdGgAZmlsZU1hc2sAcGF0aABzdGFydERhdGVUaW1lAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0
aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJz
aW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0u
RGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAU3RyaW5nAEVtcHR5AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3Ry
aW5nAFRyaW0AQ29udmVydABUb0RhdGVUaW1lAFN5c3RlbS5JTwBEaXJlY3RvcnlJbmZvAEZpbGVT
eXN0ZW1JbmZvAGdldF9FeGlzdHMARmlsZUluZm8AR2V0RmlsZXMAZ2V0X05hbWUAQ29uY2F0AEZp
bGUAQ29weQBDbGVhcgBUb0xvd2VyAENvbnRhaW5zAEluZGV4T2YATGFzdEluZGV4T2YAU3Vic3Ry
aW5nAFRvSW50MzIAZ2V0X0xlbmd0aABvcF9HcmVhdGVyVGhhbgBBZGQAS2V5Q29sbGVjdGlvbgBn
ZXRfS2V5cwBTeXN0ZW0uQ29yZQBTeXN0ZW0uTGlucQBFbnVtZXJhYmxlAExpc3RgMQBJRW51bWVy
YWJsZWAxAFRvTGlzdABTb3J0AFZhbHVlQ29sbGVjdGlvbgBnZXRfVmFsdWVzAHNldF9WYWx1ZQBz
ZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AU1RfZmJhNTIwNzljYWE0NDBlNDk1OThmMTIwYTAwYTc4
MDIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAHFTAFQAXwBmAGIAYQA1ADIAMAA3
ADkAYwBhAGEANAA0ADAAZQA0ADkANQA5ADgAZgAxADIAMABhADAAMABhADcAOAAwADIALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEFVAHMAZQByADoAOgBJAG4AcAB1
AHQARgBvAGwAZABlAHIAUABhAHQAaABfAEIATgBZAE0AbwBuAHQAaABsAHkAAC1VAHMAZQByADoA
OgBTAG8AdQByAGMAZQBGAG8AbABkAGUAcgBQAGEAdABoAAAzVQBzAGUAcgA6ADoARgBpAGwAZQBN
AGEAcwBrAF8AQgBOAFkATQBvAG4AdABoAGwAeQAAH1UAcwBlAHIAOgA6AFMAdABhAHIAdABEAGEA
dABlAAADKgAAA34AAANfAAApVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBpAGwAZQBMAGkAcwB0
AAAAAADdD5XuUUSCSqDw8NpG9z2kAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIV
BAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBg4CXwACfgACKgAIBhUSHQIRIQ4G
IAMBDg4OByADAQ4OESECBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESWRFdBCAAEmEGIAIB
DhJhBAcBEhUFIAEBEWkIAQACAAAAAAADAAABBCAAEnkEIAASfQYgARKAgRwDIAAcAyAADgUAAREh
DgcHBA4ODhEhAyAAAgcgAR0SgJEOBQACDg4OBgADAQ4OAg0HBBKAiRKAkR0SgJEIBiADAQgICAcV
Eh0CESEOBCABAg4EIAEIDgUgAg4ICAQAAQgOAyAACAkgBgEICAgICAgHAAICESERIQcgAgETABMB
CyAAFRKAmQITABMBERABARUSgKEBHgAVEoClAR4ABAoBESEHFRKAoQERIQsgABUSgKkCEwATAQMK
AQ4EIAEBHB0HDREhDggICAgIEoCJEoCRCBUSgKEBESEdEoCRCEcBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNT
VF9mYmE1MjA3OWNhYTQ0MGU0OTU5OGYxMjBhMDBhNzgwMgAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAoDYAAAAA
AAAAAAAAvjYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALA2AAAAAAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAApAMAAAAAAAAAAAAApAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAMQNLhcAAAEAxA0uFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBAQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOACAAABADAAMAAwADAA
MAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBm
AGIAYQA1ADIAMAA3ADkAYwBhAGEANAA0ADAAZQA0ADkANQA5ADgAZgAxADIAMABhADAAMABhADcA
OAAwADIAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA5ADMANAAu
ADMANQAyADQAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYAYgBhADUA
MgAwADcAOQBjAGEAYQA0ADQAMABlADQAOQA1ADkAOABmADEAMgAwAGEAMAAwAGEANwA4ADAAMgAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGYAYgBhADUAMgAwADcAOQBjAGEAYQA0ADQAMABlADQAOQA1ADkAOABmADEA
MgAwAGEAMAAwAGEANwA4ADAAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBmAGIAYQA1ADIAMAA3ADkAYwBhAGEANAA0ADAAZQA0ADkANQA5ADgAZgAxADIA
MABhADAAMABhADcAOAAwADIAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADUAOQAzADQALgAzADUAMgA0AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA5ADMANAAuADMANQAyADQAAAAAAAAAADAAAAwAAADQNgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="100"
            Column="1" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update StartDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F9984817-B382-487D-91A9-75D56177EF4B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update StartDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
          SQLTask:SqlStatementSource="exec stg.spUpdateStartDate ?,'BNYMonthlyStartDate'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update TresaliaJobLog"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{EA5C9F3F-B594-4785-B856-9762F659F378}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update TresaliaJobLog"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
          SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'BNYMonthlyJobName','U'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageID"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="255" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8F44E457-1459-41C2-B186-1671B15B3A3C}"
      DTS:From="Package\Clear Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B862CA54-E4EA-444E-9A56-DEDE2DA416A8}"
      DTS:From="Package\Create TresaliaJobLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get StartDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{19E2ED80-3265-4E23-BE61-C2BAD3035BF9}"
      DTS:From="Package\Get StartDate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Clear Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C8277359-5C37-4E89-8BF3-C5C0DD4C0A35}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{8F5B8A22-395F-43B6-B82D-8532D60B1B1A}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update TresaliaJobLog" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{42C68A45-0EB3-4ED5-A525-C21E9588D0C1}"
      DTS:From="Package\Update TresaliaJobLog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Update StartDate" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{34C91C05-331F-40CF-B45F-956B1AFA4FB8}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{2FEB644F-1B9E-473C-B0AE-D1DE524CD515}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{77baf4c7-e0f2-41b1-a9ea-3765bc7cd185}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update TresaliaJobLog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CFC91A7F-278F-4194-9E36-00551254E84D}"
              SQLTask:SqlStatementSource="exec stg.spLogPackageExecutionHistory ?,?,'BNYMonthlyJobName','E'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageID"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="404,42"
          Id="Package\Clear Staging Table"
          TopLeft="101.857142857143,209.5" />
        <NodeLayout
          Size="404,42"
          Id="Package\Create TresaliaJobLog"
          TopLeft="101.857142857143,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Foreach Loop Container\Archive File"
          TopLeft="21.5,209.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Foreach Loop Container\Create FileHistory"
          TopLeft="206,5.5" />
        <NodeLayout
          Size="223,42"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging"
          TopLeft="175.5,107.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\Logging Error"
          TopLeft="215.5,209.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Update FileHistory"
          TopLeft="5.50000000000006,311.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="251.166666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-163.166666666667,60"
              Start="0,0"
              End="-163.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2564559216385" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2564559216385"
                    Point2="0,24.2564559216385"
                    Point3="-4,24.2564559216385" />
                  <mssgle:LineSegment
                    End="-159.166666666667,24.2564559216385" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.166666666667,24.2564559216385"
                    Point2="-163.166666666667,24.2564559216385"
                    Point3="-163.166666666667,28.2564559216385" />
                  <mssgle:LineSegment
                    End="-163.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="287,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="322.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35.8333333333333,60"
              Start="0,0"
              End="-35.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2564559216385" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2564559216385"
                    Point2="0,24.2564559216385"
                    Point3="-4,24.2564559216385" />
                  <mssgle:LineSegment
                    End="-31.8333333333333,24.2564559216385" />
                  <mssgle:CubicBezierSegment
                    Point1="-31.8333333333333,24.2564559216385"
                    Point2="-35.8333333333333,24.2564559216385"
                    Point3="-35.8333333333333,28.2564559216385" />
                  <mssgle:LineSegment
                    End="-35.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.1580143229166,29.2564559216385,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="88,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="404,409"
          Size="404,452"
          Id="Package\Foreach Loop Container"
          TopLeft="101.857142857143,413.5" />
        <NodeLayout
          Size="404,42"
          Id="Package\Get StartDate"
          TopLeft="101.857142857143,107.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="109,321" />
        <NodeLayout
          Size="404,42"
          Id="Package\Update StartDate"
          TopLeft="101.857142857143,1027.5" />
        <NodeLayout
          Size="404,42"
          Id="Package\Update TresaliaJobLog"
          TopLeft="101.857142857143,925.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="303.857142857143,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-129.357142857143,69.5"
              Start="0,0"
              End="-129.357142857143,62">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.75"
                    Point2="0,34.75"
                    Point3="-4,34.75" />
                  <mssgle:LineSegment
                    End="-125.357142857143,34.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-125.357142857143,34.75"
                    Point2="-129.357142857143,34.75"
                    Point3="-129.357142857143,38.75" />
                  <mssgle:LineSegment
                    End="-129.357142857143,62" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="303.857142857143,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="303.857142857143,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="174.5,363">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129.357142857143,50.5"
              Start="0,0"
              End="129.357142857143,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.25"
                    Point2="0,25.25"
                    Point3="4,25.25" />
                  <mssgle:LineSegment
                    End="125.357142857143,25.25" />
                  <mssgle:CubicBezierSegment
                    Point1="125.357142857143,25.25"
                    Point2="129.357142857143,25.25"
                    Point3="129.357142857143,29.25" />
                  <mssgle:LineSegment
                    End="129.357142857143,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="303.857142857143,865.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="303.857142857143,967.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package.EventHandlers[OnError]\Update TresaliaJobLog"
          TopLeft="415,47" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Load BNYMonthly Into Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging\OLE DB Destination"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Row Count"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Derived Column"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Excel Source"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging\Data Conversion"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Derived Column Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Data Conversion Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Row Count Output 1]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load BNYMonthly Into Staging.Paths[Excel Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>